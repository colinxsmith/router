*** OPT_wrap.cxx	2019-05-07 10:48:08.107248982 +0100
--- OPT_wrap_12.1_.cxx	2019-05-07 10:39:38.988313512 +0100
***************
*** 164,170 ****
  
  
  #ifndef SWIG_V8_VERSION
! #define SWIG_V8_VERSION 0x031110
  #endif
  
  
--- 164,170 ----
  
  
  #ifndef SWIG_V8_VERSION
! #define SWIG_V8_VERSION 0x041110
  #endif
  
  
***************
*** 786,792 ****
  #endif
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
! typedef v8::Handle<v8::Value> SwigV8ReturnValue;
  typedef v8::Arguments SwigV8Arguments;
  typedef v8::AccessorInfo SwigV8PropertyCallbackInfo;
  #define SWIGV8_RETURN(val) return scope.Close(val)
--- 786,792 ----
  #endif
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
! typedef v8::Local<v8::Value> SwigV8ReturnValue;
  typedef v8::Arguments SwigV8Arguments;
  typedef v8::AccessorInfo SwigV8PropertyCallbackInfo;
  #define SWIGV8_RETURN(val) return scope.Close(val)
***************
*** 935,941 ****
          SWIGV8_THROW_EXCEPTION(err);
      }
    }
!   v8::Handle<v8::Value> err;
  };
  
  /* ---------------------------------------------------------------------------
--- 935,941 ----
          SWIGV8_THROW_EXCEPTION(err);
      }
    }
!   v8::Local<v8::Value> err;
  };
  
  /* ---------------------------------------------------------------------------
***************
*** 1000,1012 ****
  
  SWIGRUNTIME v8::Persistent<v8::FunctionTemplate> SWIGV8_SWIGTYPE_Proxy_class_templ;
  
! SWIGRUNTIME int SWIG_V8_ConvertInstancePtr(v8::Handle<v8::Object> objRef, void **ptr, swig_type_info *info, int flags) {
    SWIGV8_HANDLESCOPE();
  
    if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
!   v8::Handle<v8::Value> cdataRef = objRef->GetInternalField(0);
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(v8::External::Unwrap(cdataRef));
  #else
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));
--- 1000,1012 ----
  
  SWIGRUNTIME v8::Persistent<v8::FunctionTemplate> SWIGV8_SWIGTYPE_Proxy_class_templ;
  
! SWIGRUNTIME int SWIG_V8_ConvertInstancePtr(v8::Local<v8::Object> objRef, void **ptr, swig_type_info *info, int flags) {
    SWIGV8_HANDLESCOPE();
  
    if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
!   v8::Local<v8::Value> cdataRef = objRef->GetInternalField(0);
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(v8::External::Unwrap(cdataRef));
  #else
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));
***************
*** 1052,1067 ****
    delete proxy;
  }
  
! SWIGRUNTIME int SWIG_V8_GetInstancePtr(v8::Handle<v8::Value> valRef, void **ptr) {
    if(!valRef->IsObject()) {
      return SWIG_TypeError;
    }
!   v8::Handle<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
  
    if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
!   v8::Handle<v8::Value> cdataRef = objRef->GetInternalField(0);
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(v8::External::Unwrap(cdataRef));
  #else
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));
--- 1052,1067 ----
    delete proxy;
  }
  
! SWIGRUNTIME int SWIG_V8_GetInstancePtr(v8::Local<v8::Value> valRef, void **ptr) {
    if(!valRef->IsObject()) {
      return SWIG_TypeError;
    }
!   v8::Local<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
  
    if(objRef->InternalFieldCount() < 1) return SWIG_ERROR;
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
!   v8::Local<v8::Value> cdataRef = objRef->GetInternalField(0);
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(v8::External::Unwrap(cdataRef));
  #else
    SWIGV8_Proxy *cdata = static_cast<SWIGV8_Proxy *>(objRef->GetAlignedPointerFromInternalField(0));
***************
*** 1076,1082 ****
    return SWIG_OK;
  }
  
! SWIGRUNTIME void SWIGV8_SetPrivateData(v8::Handle<v8::Object> obj, void *ptr, swig_type_info *info, int flags) {
    SWIGV8_Proxy *cdata = new SWIGV8_Proxy();
    cdata->swigCObject = ptr;
    cdata->swigCMemOwn = (flags & SWIG_POINTER_OWN) ? 1 : 0;
--- 1076,1082 ----
    return SWIG_OK;
  }
  
! SWIGRUNTIME void SWIGV8_SetPrivateData(v8::Local<v8::Object> obj, void *ptr, swig_type_info *info, int flags) {
    SWIGV8_Proxy *cdata = new SWIGV8_Proxy();
    cdata->swigCObject = ptr;
    cdata->swigCMemOwn = (flags & SWIG_POINTER_OWN) ? 1 : 0;
***************
*** 1139,1145 ****
  
  }
  
! SWIGRUNTIME int SWIG_V8_ConvertPtr(v8::Handle<v8::Value> valRef, void **ptr, swig_type_info *info, int flags) {
    SWIGV8_HANDLESCOPE();
    
    /* special case: JavaScript null => C NULL pointer */
--- 1139,1145 ----
  
  }
  
! SWIGRUNTIME int SWIG_V8_ConvertPtr(v8::Local<v8::Value> valRef, void **ptr, swig_type_info *info, int flags) {
    SWIGV8_HANDLESCOPE();
    
    /* special case: JavaScript null => C NULL pointer */
***************
*** 1150,1163 ****
    if(!valRef->IsObject()) {
      return SWIG_TypeError;
    }
!   v8::Handle<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
    return SWIG_V8_ConvertInstancePtr(objRef, ptr, info, flags);
  }
  
! SWIGRUNTIME v8::Handle<v8::Value> SWIG_V8_NewPointerObj(void *ptr, swig_type_info *info, int flags) {
    SWIGV8_HANDLESCOPE_ESC();
    
!   v8::Handle<v8::FunctionTemplate> class_templ;
  
    if (ptr == NULL) {
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
--- 1150,1163 ----
    if(!valRef->IsObject()) {
      return SWIG_TypeError;
    }
!   v8::Local<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
    return SWIG_V8_ConvertInstancePtr(objRef, ptr, info, flags);
  }
  
! SWIGRUNTIME v8::Local<v8::Value> SWIG_V8_NewPointerObj(void *ptr, swig_type_info *info, int flags) {
    SWIGV8_HANDLESCOPE_ESC();
    
!   v8::Local<v8::FunctionTemplate> class_templ;
  
    if (ptr == NULL) {
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
***************
*** 1184,1191 ****
    }
  #endif
  
! //  v8::Handle<v8::Object> result = class_templ->InstanceTemplate()->NewInstance();
!   v8::Local<v8::Object> result = class_templ->InstanceTemplate()->NewInstance();
    SWIGV8_SetPrivateData(result, ptr, info, flags);
  
    SWIGV8_ESCAPE(result);
--- 1184,1191 ----
    }
  #endif
  
! //  v8::Local<v8::Object> result = class_templ->InstanceTemplate()->NewInstance();
!   v8::Local<v8::Object> result = class_templ->InstanceTemplate()->NewInstance(isolate->GetCurrentContext()).FromMaybe(v8::Local<v8::Object>());
    SWIGV8_SetPrivateData(result, ptr, info, flags);
  
    SWIGV8_ESCAPE(result);
***************
*** 1205,1211 ****
  SWIGRUNTIME SwigV8ReturnValue _SWIGV8_wrap_equals(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    void *arg1 = (void *) 0 ;
    void *arg2 = (void *) 0 ;
    bool result;
--- 1205,1211 ----
  SWIGRUNTIME SwigV8ReturnValue _SWIGV8_wrap_equals(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    void *arg1 = (void *) 0 ;
    void *arg2 = (void *) 0 ;
    bool result;
***************
*** 1235,1241 ****
  SWIGRUNTIME SwigV8ReturnValue _wrap_getCPtr(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    void *arg1 = (void *) 0 ;
    long result;
    int res1;
--- 1235,1241 ----
  SWIGRUNTIME SwigV8ReturnValue _wrap_getCPtr(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    void *arg1 = (void *) 0 ;
    long result;
    int res1;
***************
*** 1274,1286 ****
  };
  
  SWIGRUNTIMEINLINE
! int SwigV8Packed_Check(v8::Handle<v8::Value> valRef) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
    if(objRef->InternalFieldCount() < 1) return false;
  #if (V8_MAJOR_VERSION-0) < 5
!   v8::Handle<v8::Value> flag = objRef->GetHiddenValue(SWIGV8_STRING_NEW("__swig__packed_data__"));
  #else
    v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("__swig__packed_data__"));
    v8::Local<v8::Value> flag;
--- 1274,1286 ----
  };
  
  SWIGRUNTIMEINLINE
! int SwigV8Packed_Check(v8::Local<v8::Value> valRef) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
    if(objRef->InternalFieldCount() < 1) return false;
  #if (V8_MAJOR_VERSION-0) < 5
!   v8::Local<v8::Value> flag = objRef->GetHiddenValue(SWIGV8_STRING_NEW("__swig__packed_data__"));
  #else
    v8::Local<v8::Private> privateKey = v8::Private::ForApi(v8::Isolate::GetCurrent(), SWIGV8_STRING_NEW("__swig__packed_data__"));
    v8::Local<v8::Value> flag;
***************
*** 1291,1306 ****
  }
  
  SWIGRUNTIME
! swig_type_info *SwigV8Packed_UnpackData(v8::Handle<v8::Value> valRef, void *ptr, size_t size) {
    if (SwigV8Packed_Check(valRef)) {
      SWIGV8_HANDLESCOPE();
      
      SwigV8PackedData *sobj;
  
!     v8::Handle<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
!     v8::Handle<v8::Value> cdataRef = objRef->GetInternalField(0);
      sobj = static_cast<SwigV8PackedData*>(v8::External::Unwrap(cdataRef));
  #else
      sobj = static_cast<SwigV8PackedData*>(objRef->GetAlignedPointerFromInternalField(0));
--- 1291,1306 ----
  }
  
  SWIGRUNTIME
! swig_type_info *SwigV8Packed_UnpackData(v8::Local<v8::Value> valRef, void *ptr, size_t size) {
    if (SwigV8Packed_Check(valRef)) {
      SWIGV8_HANDLESCOPE();
      
      SwigV8PackedData *sobj;
  
!     v8::Local<v8::Object> objRef = SWIGV8_TO_OBJECT(valRef);
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031511)
!     v8::Local<v8::Value> cdataRef = objRef->GetInternalField(0);
      sobj = static_cast<SwigV8PackedData*>(v8::External::Unwrap(cdataRef));
  #else
      sobj = static_cast<SwigV8PackedData*>(objRef->GetAlignedPointerFromInternalField(0));
***************
*** 1314,1320 ****
  }
  
  SWIGRUNTIME
! int SWIGV8_ConvertPacked(v8::Handle<v8::Value> valRef, void *ptr, size_t sz, swig_type_info *ty) {
    swig_type_info *to = SwigV8Packed_UnpackData(valRef, ptr, sz);
    if (!to) return SWIG_ERROR;
    if (ty) {
--- 1314,1320 ----
  }
  
  SWIGRUNTIME
! int SWIGV8_ConvertPacked(v8::Local<v8::Value> valRef, void *ptr, size_t sz, swig_type_info *ty) {
    swig_type_info *to = SwigV8Packed_UnpackData(valRef, ptr, sz);
    if (!to) return SWIG_ERROR;
    if (ty) {
***************
*** 1362,1372 ****
  }
  
  SWIGRUNTIME
! v8::Handle<v8::Value> SWIGV8_NewPackedObj(void *data, size_t size, swig_type_info *type) {
    SWIGV8_HANDLESCOPE_ESC();
  
    SwigV8PackedData *cdata = new SwigV8PackedData(data, size, type);
! //  v8::Handle<v8::Object> obj = SWIGV8_OBJECT_NEW();
    v8::Local<v8::Object> obj = SWIGV8_OBJECT_NEW();
  
  #if (V8_MAJOR_VERSION-0) < 5
--- 1362,1372 ----
  }
  
  SWIGRUNTIME
! v8::Local<v8::Value> SWIGV8_NewPackedObj(void *data, size_t size, swig_type_info *type) {
    SWIGV8_HANDLESCOPE_ESC();
  
    SwigV8PackedData *cdata = new SwigV8PackedData(data, size, type);
! //  v8::Local<v8::Object> obj = SWIGV8_OBJECT_NEW();
    v8::Local<v8::Object> obj = SWIGV8_OBJECT_NEW();
  
  #if (V8_MAJOR_VERSION-0) < 5
***************
*** 1427,1435 ****
  SWIGRUNTIME
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
! v8::Handle<v8::Value> SWIGV8_AppendOutput(v8::Handle<v8::Value> result, v8::Handle<v8::Value> obj) {
  #else
! v8::Handle<v8::Value> SWIGV8_AppendOutput(v8::Local<v8::Value> result, v8::Handle<v8::Value> obj) {
  #endif
    SWIGV8_HANDLESCOPE_ESC();
    
--- 1427,1435 ----
  SWIGRUNTIME
  
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
! v8::Local<v8::Value> SWIGV8_AppendOutput(v8::Local<v8::Value> result, v8::Local<v8::Value> obj) {
  #else
! v8::Local<v8::Value> SWIGV8_AppendOutput(v8::Local<v8::Value> result, v8::Local<v8::Value> obj) {
  #endif
    SWIGV8_HANDLESCOPE_ESC();
    
***************
*** 1437,1443 ****
      result = SWIGV8_ARRAY_NEW();
    }
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
!   v8::Handle<v8::Array> arr = v8::Handle<v8::Array>::Cast(result);
  #else  
    v8::Local<v8::Array> arr = v8::Local<v8::Array>::Cast(result);
  #endif
--- 1437,1443 ----
      result = SWIGV8_ARRAY_NEW();
    }
  #if (V8_MAJOR_VERSION-0) < 4 && (SWIG_V8_VERSION < 0x031903)
!   v8::Local<v8::Array> arr = v8::Local<v8::Array>::Cast(result);
  #else  
    v8::Local<v8::Array> arr = v8::Local<v8::Array>::Cast(result);
  #endif
***************
*** 1469,1487 ****
  /**
   * Creates a class template for a class with specified initialization function.
   */
! SWIGRUNTIME v8::Handle<v8::FunctionTemplate> SWIGV8_CreateClassTemplate(const char* symbol) {
      SWIGV8_HANDLESCOPE_ESC();
      
      v8::Local<v8::FunctionTemplate> class_templ = SWIGV8_FUNCTEMPLATE_NEW_VOID();
      class_templ->SetClassName(SWIGV8_SYMBOL_NEW(symbol));
  
!     v8::Handle<v8::ObjectTemplate> inst_templ = class_templ->InstanceTemplate();
      inst_templ->SetInternalFieldCount(1);
  
!     v8::Handle<v8::ObjectTemplate> equals_templ = class_templ->PrototypeTemplate();
      equals_templ->Set(SWIGV8_SYMBOL_NEW("equals"), SWIGV8_FUNCTEMPLATE_NEW(_SWIGV8_wrap_equals));
  
!     v8::Handle<v8::ObjectTemplate> cptr_templ = class_templ->PrototypeTemplate();
      cptr_templ->Set(SWIGV8_SYMBOL_NEW("getCPtr"), SWIGV8_FUNCTEMPLATE_NEW(_wrap_getCPtr));
  
      SWIGV8_ESCAPE(class_templ);
--- 1469,1487 ----
  /**
   * Creates a class template for a class with specified initialization function.
   */
! SWIGRUNTIME v8::Local<v8::FunctionTemplate> SWIGV8_CreateClassTemplate(const char* symbol) {
      SWIGV8_HANDLESCOPE_ESC();
      
      v8::Local<v8::FunctionTemplate> class_templ = SWIGV8_FUNCTEMPLATE_NEW_VOID();
      class_templ->SetClassName(SWIGV8_SYMBOL_NEW(symbol));
  
!     v8::Local<v8::ObjectTemplate> inst_templ = class_templ->InstanceTemplate();
      inst_templ->SetInternalFieldCount(1);
  
!     v8::Local<v8::ObjectTemplate> equals_templ = class_templ->PrototypeTemplate();
      equals_templ->Set(SWIGV8_SYMBOL_NEW("equals"), SWIGV8_FUNCTEMPLATE_NEW(_SWIGV8_wrap_equals));
  
!     v8::Local<v8::ObjectTemplate> cptr_templ = class_templ->PrototypeTemplate();
      cptr_templ->Set(SWIGV8_SYMBOL_NEW("getCPtr"), SWIGV8_FUNCTEMPLATE_NEW(_wrap_getCPtr));
  
      SWIGV8_ESCAPE(class_templ);
***************
*** 1490,1522 ****
  /**
   * Registers a class method with given name for a given class template.
   */
! SWIGRUNTIME void SWIGV8_AddMemberFunction(v8::Handle<v8::FunctionTemplate> class_templ, const char* symbol,
    SwigV8FunctionCallback _func) {
!     v8::Handle<v8::ObjectTemplate> proto_templ = class_templ->PrototypeTemplate();
      proto_templ->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func));
  }
  
  /**
   * Registers a class property with given name for a given class template.
   */
! SWIGRUNTIME void SWIGV8_AddMemberVariable(v8::Handle<v8::FunctionTemplate> class_templ, const char* symbol,
    SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
!   v8::Handle<v8::ObjectTemplate> proto_templ = class_templ->InstanceTemplate();
    proto_templ->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
  }
  
  /**
   * Registers a class method with given name for a given object.
   */
! SWIGRUNTIME void SWIGV8_AddStaticFunction(v8::Handle<v8::Object> obj, const char* symbol,
    const SwigV8FunctionCallback& _func) {
!   obj->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func)->GetFunction());
  }
  
  /**
   * Registers a class method with given name for a given object.
   */
! SWIGRUNTIME void SWIGV8_AddStaticVariable(v8::Handle<v8::Object> obj, const char* symbol,
    SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
  #if (V8_MAJOR_VERSION-0) < 5
    obj->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
--- 1490,1522 ----
  /**
   * Registers a class method with given name for a given class template.
   */
! SWIGRUNTIME void SWIGV8_AddMemberFunction(v8::Local<v8::FunctionTemplate> class_templ, const char* symbol,
    SwigV8FunctionCallback _func) {
!     v8::Local<v8::ObjectTemplate> proto_templ = class_templ->PrototypeTemplate();
      proto_templ->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func));
  }
  
  /**
   * Registers a class property with given name for a given class template.
   */
! SWIGRUNTIME void SWIGV8_AddMemberVariable(v8::Local<v8::FunctionTemplate> class_templ, const char* symbol,
    SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
!   v8::Local<v8::ObjectTemplate> proto_templ = class_templ->InstanceTemplate();
    proto_templ->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
  }
  
  /**
   * Registers a class method with given name for a given object.
   */
! SWIGRUNTIME void SWIGV8_AddStaticFunction(v8::Local<v8::Object> obj, const char* symbol,
    const SwigV8FunctionCallback& _func) {
!   obj->Set(SWIGV8_SYMBOL_NEW(symbol), SWIGV8_FUNCTEMPLATE_NEW(_func)->GetFunction(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked());
  }
  
  /**
   * Registers a class method with given name for a given object.
   */
! SWIGRUNTIME void SWIGV8_AddStaticVariable(v8::Local<v8::Object> obj, const char* symbol,
    SwigV8AccessorGetterCallback getter, SwigV8AccessorSetterCallback setter) {
  #if (V8_MAJOR_VERSION-0) < 5
    obj->SetAccessor(SWIGV8_SYMBOL_NEW(symbol), getter, setter);
***************
*** 3440,3446 ****
  
  
  SWIGINTERN
! int SWIG_AsVal_double (v8::Handle<v8::Value> obj, double *val)
  {
    if(!obj->IsNumber()) {
      return SWIG_TypeError;
--- 3440,3446 ----
  
  
  SWIGINTERN
! int SWIG_AsVal_double (v8::Local<v8::Value> obj, double *val)
  {
    if(!obj->IsNumber()) {
      return SWIG_TypeError;
***************
*** 3488,3494 ****
  
  
  SWIGINTERN
! int SWIG_AsVal_unsigned_SS_long (v8::Handle<v8::Value> obj, unsigned long *val)
  {
    if(!obj->IsNumber()) {
      return SWIG_TypeError;
--- 3488,3494 ----
  
  
  SWIGINTERN
! int SWIG_AsVal_unsigned_SS_long (v8::Local<v8::Value> obj, unsigned long *val)
  {
    if(!obj->IsNumber()) {
      return SWIG_TypeError;
***************
*** 3507,3513 ****
  
  
  SWIGINTERN
! int SWIG_AsVal_long (v8::Handle<v8::Value> obj, long* val)
  {
    if (!obj->IsNumber()) {
      return SWIG_TypeError;
--- 3507,3513 ----
  
  
  SWIGINTERN
! int SWIG_AsVal_long (v8::Local<v8::Value> obj, long* val)
  {
    if (!obj->IsNumber()) {
      return SWIG_TypeError;
***************
*** 3519,3525 ****
  
  
  SWIGINTERN
! int SWIG_AsVal_int (v8::Handle<v8::Value> valRef, int* val)
  {
    if (!valRef->IsNumber()) {
      return SWIG_TypeError;
--- 3519,3525 ----
  
  
  SWIGINTERN
! int SWIG_AsVal_int (v8::Local<v8::Value> valRef, int* val)
  {
    if (!valRef->IsNumber()) {
      return SWIG_TypeError;
***************
*** 3531,3543 ****
  
  
  SWIGINTERNINLINE
! v8::Handle<v8::Value> SWIG_From_long  (long value)
  {
    return SWIGV8_NUMBER_NEW(value);
  }
  
  
! SWIGINTERNINLINE v8::Handle<v8::Value>
  SWIG_From_short  (short value)
  {    
    return SWIG_From_long  (value);
--- 3531,3543 ----
  
  
  SWIGINTERNINLINE
! v8::Local<v8::Value> SWIG_From_long  (long value)
  {
    return SWIGV8_NUMBER_NEW(value);
  }
  
  
! SWIGINTERNINLINE v8::Local<v8::Value>
  SWIG_From_short  (short value)
  {    
    return SWIG_From_long  (value);
***************
*** 3561,3567 ****
  
  #ifdef SWIG_LONG_LONG_AVAILABLE
  SWIGINTERN
! int SWIG_AsVal_unsigned_SS_long_SS_long (v8::Handle<v8::Value> obj, unsigned long long *val)
  {
    if(!obj->IsNumber()) {
      return SWIG_TypeError;
--- 3561,3567 ----
  
  #ifdef SWIG_LONG_LONG_AVAILABLE
  SWIGINTERN
! int SWIG_AsVal_unsigned_SS_long_SS_long (v8::Local<v8::Value> obj, unsigned long long *val)
  {
    if(!obj->IsNumber()) {
      return SWIG_TypeError;
***************
*** 3581,3587 ****
  
  
  SWIGINTERNINLINE int
! SWIG_AsVal_size_t (v8::Handle<v8::Value> obj, size_t *val)
  {
    int res = SWIG_TypeError;
  #ifdef SWIG_LONG_LONG_AVAILABLE
--- 3581,3587 ----
  
  
  SWIGINTERNINLINE int
! SWIG_AsVal_size_t (v8::Local<v8::Value> obj, size_t *val)
  {
    int res = SWIG_TypeError;
  #ifdef SWIG_LONG_LONG_AVAILABLE
***************
*** 3602,3608 ****
  
  
  SWIGINTERN int
! SWIG_AsVal_short (v8::Handle<v8::Value> obj, short *val)
  {
    long v;
    int res = SWIG_AsVal_long (obj, &v);
--- 3602,3608 ----
  
  
  SWIGINTERN int
! SWIG_AsVal_short (v8::Local<v8::Value> obj, short *val)
  {
    long v;
    int res = SWIG_AsVal_long (obj, &v);
***************
*** 3631,3640 ****
  
  
  SWIGINTERN int
! SWIG_AsCharPtrAndSize(v8::Handle<v8::Value> valRef, char** cptr, size_t* psize, int *alloc)
  {
    if(valRef->IsString()) {
!     v8::Handle<v8::String> js_str = SWIGV8_TO_STRING(valRef);
  
      size_t len = SWIGV8_UTF8_LENGTH(js_str) + 1;
      char* cstr = new char[len];
--- 3631,3640 ----
  
  
  SWIGINTERN int
! SWIG_AsCharPtrAndSize(v8::Local<v8::Value> valRef, char** cptr, size_t* psize, int *alloc)
  {
    if(valRef->IsString()) {
!     v8::Local<v8::String> js_str = SWIGV8_TO_STRING(valRef);
  
      size_t len = SWIGV8_UTF8_LENGTH(js_str) + 1;
      char* cstr = new char[len];
***************
*** 3647,3653 ****
      return SWIG_OK;
    } else {
      if(valRef->IsObject()) {
!       v8::Handle<v8::Object> obj = SWIGV8_TO_OBJECT(valRef);
        // try if the object is a wrapped char[]
        swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
        if (pchar_descriptor) {
--- 3647,3653 ----
      return SWIG_OK;
    } else {
      if(valRef->IsObject()) {
!       v8::Local<v8::Object> obj = SWIGV8_TO_OBJECT(valRef);
        // try if the object is a wrapped char[]
        swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
        if (pchar_descriptor) {
***************
*** 3671,3677 ****
  
  
  SWIGINTERNINLINE
! v8::Handle<v8::Value> SWIG_From_unsigned_SS_long  (unsigned long value)
  {
    return (value > LONG_MAX) ?
      SWIGV8_INTEGER_NEW_UNS(value) : SWIGV8_INTEGER_NEW(static_cast< long >(value));
--- 3671,3677 ----
  
  
  SWIGINTERNINLINE
! v8::Local<v8::Value> SWIG_From_unsigned_SS_long  (unsigned long value)
  {
    return (value > LONG_MAX) ?
      SWIGV8_INTEGER_NEW_UNS(value) : SWIGV8_INTEGER_NEW(static_cast< long >(value));
***************
*** 3680,3686 ****
  
  #ifdef SWIG_LONG_LONG_AVAILABLE
  SWIGINTERNINLINE
! v8::Handle<v8::Value> SWIG_From_long_SS_long  (long long value)
  {
    return SWIGV8_NUMBER_NEW(value);
  }
--- 3680,3686 ----
  
  #ifdef SWIG_LONG_LONG_AVAILABLE
  SWIGINTERNINLINE
! v8::Local<v8::Value> SWIG_From_long_SS_long  (long long value)
  {
    return SWIGV8_NUMBER_NEW(value);
  }
***************
*** 3689,3695 ****
  
  #ifdef SWIG_LONG_LONG_AVAILABLE
  SWIGINTERNINLINE
! v8::Handle<v8::Value> SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
  {
    return (value > LONG_MAX) ?
      SWIGV8_INTEGER_NEW_UNS(value) : SWIGV8_INTEGER_NEW(static_cast< long >(value));
--- 3689,3695 ----
  
  #ifdef SWIG_LONG_LONG_AVAILABLE
  SWIGINTERNINLINE
! v8::Local<v8::Value> SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
  {
    return (value > LONG_MAX) ?
      SWIGV8_INTEGER_NEW_UNS(value) : SWIGV8_INTEGER_NEW(static_cast< long >(value));
***************
*** 3697,3703 ****
  #endif
  
  
! SWIGINTERNINLINE v8::Handle<v8::Value>
  SWIG_From_size_t  (size_t value)
  {    
  #ifdef SWIG_LONG_LONG_AVAILABLE
--- 3697,3703 ----
  #endif
  
  
! SWIGINTERNINLINE v8::Local<v8::Value>
  SWIG_From_size_t  (size_t value)
  {    
  #ifdef SWIG_LONG_LONG_AVAILABLE
***************
*** 3714,3720 ****
  
  
  SWIGINTERN int
! SWIG_AsVal_unsigned_SS_int (v8::Handle<v8::Value> obj, unsigned int *val)
  {
    unsigned long v;
    int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
--- 3714,3720 ----
  
  
  SWIGINTERN int
! SWIG_AsVal_unsigned_SS_int (v8::Local<v8::Value> obj, unsigned int *val)
  {
    unsigned long v;
    int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
***************
*** 3730,3742 ****
  
  
  SWIGINTERNINLINE
! v8::Handle<v8::Value> SWIG_From_int  (int value)
  {
    return SWIGV8_INT32_NEW(value);
  }
  
  
! SWIGINTERNINLINE v8::Handle<v8::Value>
  SWIG_FromCharPtrAndSize(const char* carray, size_t size)
  {
    if (carray) {
--- 3730,3742 ----
  
  
  SWIGINTERNINLINE
! v8::Local<v8::Value> SWIG_From_int  (int value)
  {
    return SWIGV8_INT32_NEW(value);
  }
  
  
! SWIGINTERNINLINE v8::Local<v8::Value>
  SWIG_FromCharPtrAndSize(const char* carray, size_t size)
  {
    if (carray) {
***************
*** 3744,3750 ****
        // TODO: handle extra long strings
        return SWIGV8_UNDEFINED();
      } else {
!       v8::Handle<v8::String> js_str = SWIGV8_STRING_NEW2(carray, size);
        return js_str;
      }
    } else {
--- 3744,3750 ----
        // TODO: handle extra long strings
        return SWIGV8_UNDEFINED();
      } else {
!       v8::Local<v8::String> js_str = SWIGV8_STRING_NEW2(carray, size);
        return js_str;
      }
    } else {
***************
*** 3753,3759 ****
  }
  
  
! SWIGINTERNINLINE v8::Handle<v8::Value> 
  SWIG_FromCharPtr(const char *cptr)
  { 
    return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
--- 3753,3759 ----
  }
  
  
! SWIGINTERNINLINE v8::Local<v8::Value> 
  SWIG_FromCharPtr(const char *cptr)
  { 
    return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
***************
*** 3761,3774 ****
  
  
  SWIGINTERN
! v8::Handle<v8::Value> SWIG_From_double   (double val)
  {
    return SWIGV8_NUMBER_NEW(val);
  }
  
  
  SWIGINTERN
! int SWIG_AsVal_bool (v8::Handle<v8::Value> obj, bool *val)
  {
    if(!obj->IsBoolean()) {
      return SWIG_ERROR;
--- 3761,3774 ----
  
  
  SWIGINTERN
! v8::Local<v8::Value> SWIG_From_double   (double val)
  {
    return SWIGV8_NUMBER_NEW(val);
  }
  
  
  SWIGINTERN
! int SWIG_AsVal_bool (v8::Local<v8::Value> obj, bool *val)
  {
    if(!obj->IsBoolean()) {
      return SWIG_ERROR;
***************
*** 3780,3786 ****
  
  
  SWIGINTERNINLINE
! v8::Handle<v8::Value>
  SWIG_From_bool  (bool value)
  {
    return SWIGV8_BOOLEAN_NEW(value);
--- 3780,3786 ----
  
  
  SWIGINTERNINLINE
! v8::Local<v8::Value>
  SWIG_From_bool  (bool value)
  {
    return SWIGV8_BOOLEAN_NEW(value);
***************
*** 3788,3794 ****
  
  
  SWIGINTERN int
! SWIG_AsVal_unsigned_SS_char (v8::Handle<v8::Value> obj, unsigned char *val)
  {
    unsigned long v;
    int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
--- 3788,3794 ----
  
  
  SWIGINTERN int
! SWIG_AsVal_unsigned_SS_char (v8::Local<v8::Value> obj, unsigned char *val)
  {
    unsigned long v;
    int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
***************
*** 3803,3816 ****
  }
  
  
! SWIGINTERNINLINE v8::Handle<v8::Value>
  SWIG_From_unsigned_SS_int  (unsigned int value)
  {    
    return SWIG_From_unsigned_SS_long  (value);
  }
  
  
! SWIGINTERNINLINE v8::Handle<v8::Value>
  SWIG_From_unsigned_SS_char  (unsigned char value)
  {    
    return SWIG_From_unsigned_SS_long  (value);
--- 3803,3816 ----
  }
  
  
! SWIGINTERNINLINE v8::Local<v8::Value>
  SWIG_From_unsigned_SS_int  (unsigned int value)
  {    
    return SWIG_From_unsigned_SS_long  (value);
  }
  
  
! SWIGINTERNINLINE v8::Local<v8::Value>
  SWIG_From_unsigned_SS_char  (unsigned char value)
  {    
    return SWIG_From_unsigned_SS_long  (value);
***************
*** 3828,3834 ****
  static SwigV8ReturnValue _wrap_MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    unsigned long arg2 ;
    vector arg3 = (vector) 0 ;
--- 3828,3834 ----
  static SwigV8ReturnValue _wrap_MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    unsigned long arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 4026,4032 ****
  static SwigV8ReturnValue _wrap_FX_get(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    unsigned long arg2 ;
    vector arg3 = (vector) 0 ;
--- 4026,4032 ----
  static SwigV8ReturnValue _wrap_FX_get(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    unsigned long arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 4197,4203 ****
  static SwigV8ReturnValue _wrap_SimpleOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    long arg2 ;
    int arg3 ;
--- 4197,4203 ----
  static SwigV8ReturnValue _wrap_SimpleOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    long arg2 ;
    int arg3 ;
***************
*** 4597,4603 ****
  static SwigV8ReturnValue _wrap_testchars(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    int arg1 ;
    char **arg2 = (char **) 0 ;
    char **arg3 = (char **) 0 ;
--- 4597,4603 ----
  static SwigV8ReturnValue _wrap_testchars(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    int arg1 ;
    char **arg2 = (char **) 0 ;
    char **arg3 = (char **) 0 ;
***************
*** 4702,4708 ****
  static SwigV8ReturnValue _wrap_test2dlist(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 4702,4708 ----
  static SwigV8ReturnValue _wrap_test2dlist(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 4765,4771 ****
  static SwigV8ReturnValue _wrap_Sym_mult(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 4765,4771 ----
  static SwigV8ReturnValue _wrap_Sym_mult(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 4873,4879 ****
  static SwigV8ReturnValue _wrap_GetOrder(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    double *arg2 = (double *) 0 ;
    size_t *arg3 = (size_t *) 0 ;
--- 4873,4879 ----
  static SwigV8ReturnValue _wrap_GetOrder(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    double *arg2 = (double *) 0 ;
    size_t *arg3 = (size_t *) 0 ;
***************
*** 4976,4982 ****
  static SwigV8ReturnValue _wrap_PatternMin(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 4976,4982 ----
  static SwigV8ReturnValue _wrap_PatternMin(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 5139,5145 ****
  static SwigV8ReturnValue _wrap_dumpvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    char *arg2 = (char *) 0 ;
    double *arg3 = (double *) 0 ;
--- 5139,5145 ----
  static SwigV8ReturnValue _wrap_dumpvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    char *arg2 = (char *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 5211,5217 ****
  static SwigV8ReturnValue _wrap_dumpsvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    char *arg2 = (char *) 0 ;
    char **arg3 = (char **) 0 ;
--- 5211,5217 ----
  static SwigV8ReturnValue _wrap_dumpsvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    char *arg2 = (char *) 0 ;
    char **arg3 = (char **) 0 ;
***************
*** 5297,5303 ****
  static SwigV8ReturnValue _wrap_ReorderS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
--- 5297,5303 ----
  static SwigV8ReturnValue _wrap_ReorderS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 5378,5384 ****
  static SwigV8ReturnValue _wrap_ReorderSquare(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
--- 5378,5384 ----
  static SwigV8ReturnValue _wrap_ReorderSquare(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 5459,5465 ****
  static SwigV8ReturnValue _wrap_Reorder(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
--- 5459,5465 ----
  static SwigV8ReturnValue _wrap_Reorder(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 5540,5546 ****
  static SwigV8ReturnValue _wrap_Reorder_mult(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
--- 5540,5546 ----
  static SwigV8ReturnValue _wrap_Reorder_mult(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 5630,5636 ****
  static SwigV8ReturnValue _wrap_getBIMcov(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t *arg3 = (size_t *) 0 ;
--- 5630,5636 ----
  static SwigV8ReturnValue _wrap_getBIMcov(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    size_t *arg3 = (size_t *) 0 ;
***************
*** 5769,5775 ****
  static SwigV8ReturnValue _wrap_procBIMcov(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
--- 5769,5775 ----
  static SwigV8ReturnValue _wrap_procBIMcov(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
***************
*** 5829,5835 ****
  static SwigV8ReturnValue _wrap_procBIMmod(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
--- 5829,5835 ----
  static SwigV8ReturnValue _wrap_procBIMmod(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *arg2 = (char *) 0 ;
    char *arg3 = (char *) 0 ;
***************
*** 5917,5923 ****
  static SwigV8ReturnValue _wrap_digitise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 5917,5923 ----
  static SwigV8ReturnValue _wrap_digitise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 6079,6085 ****
  static SwigV8ReturnValue _wrap_roundcount(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 6079,6085 ----
  static SwigV8ReturnValue _wrap_roundcount(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 6269,6275 ****
  static SwigV8ReturnValue _wrap_fix_covariancem(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
--- 6269,6275 ----
  static SwigV8ReturnValue _wrap_fix_covariancem(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
***************
*** 6324,6330 ****
  static SwigV8ReturnValue _wrap_InvQ_d(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 6324,6330 ----
  static SwigV8ReturnValue _wrap_InvQ_d(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 6433,6439 ****
  static SwigV8ReturnValue _wrap_ConstrRegress(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 6433,6439 ----
  static SwigV8ReturnValue _wrap_ConstrRegress(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 6632,6638 ****
  static SwigV8ReturnValue _wrap_pickout(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    dimen arg3 ;
--- 6632,6638 ----
  static SwigV8ReturnValue _wrap_pickout(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    dimen arg3 ;
***************
*** 6801,6807 ****
  static SwigV8ReturnValue _wrap_pickoutstrings(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    dimen arg3 ;
--- 6801,6807 ----
  static SwigV8ReturnValue _wrap_pickoutstrings(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    dimen arg3 ;
***************
*** 6982,6988 ****
  static SwigV8ReturnValue _wrap_Return_Message(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
--- 6982,6988 ----
  static SwigV8ReturnValue _wrap_Return_Message(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
***************
*** 7010,7016 ****
  static SwigV8ReturnValue _wrap_MultiStageMessage(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
--- 7010,7016 ----
  static SwigV8ReturnValue _wrap_MultiStageMessage(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
***************
*** 7038,7044 ****
  static SwigV8ReturnValue _wrap_SOCPlstestMessage(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
--- 7038,7044 ----
  static SwigV8ReturnValue _wrap_SOCPlstestMessage(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    int arg1 ;
    int val1 ;
    int ecode1 = 0 ;
***************
*** 7066,7072 ****
  static SwigV8ReturnValue _wrap_eigendecomp(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 7066,7072 ----
  static SwigV8ReturnValue _wrap_eigendecomp(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 7157,7163 ****
  static SwigV8ReturnValue _wrap_dldlfactNULL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
--- 7157,7163 ----
  static SwigV8ReturnValue _wrap_dldlfactNULL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
***************
*** 7211,7217 ****
  static SwigV8ReturnValue _wrap_expire_date(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
--- 7211,7217 ----
  static SwigV8ReturnValue _wrap_expire_date(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
***************
*** 7240,7246 ****
  static SwigV8ReturnValue _wrap_version(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
--- 7240,7246 ----
  static SwigV8ReturnValue _wrap_version(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
***************
*** 7269,7275 ****
  static SwigV8ReturnValue _wrap_cversion(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
--- 7269,7275 ----
  static SwigV8ReturnValue _wrap_cversion(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
***************
*** 7298,7304 ****
  static SwigV8ReturnValue _wrap_component_key(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
--- 7298,7304 ----
  static SwigV8ReturnValue _wrap_component_key(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    char *result = 0 ;
    
***************
*** 7327,7333 ****
  static SwigV8ReturnValue _wrap_days_left(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    int result;
    
--- 7327,7333 ----
  static SwigV8ReturnValue _wrap_days_left(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    int result;
    
***************
*** 7385,7391 ****
  static SwigV8ReturnValue _wrap_Extract_Factor_Information(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    dimen arg3 ;
--- 7385,7391 ----
  static SwigV8ReturnValue _wrap_Extract_Factor_Information(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 7616,7622 ****
  static SwigV8ReturnValue _wrap_CurrencyProcessFL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 7616,7622 ----
  static SwigV8ReturnValue _wrap_CurrencyProcessFL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 7733,7739 ****
  static SwigV8ReturnValue _wrap_winsorise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
--- 7733,7739 ----
  static SwigV8ReturnValue _wrap_winsorise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
***************
*** 7832,7838 ****
  static SwigV8ReturnValue _wrap_percentile(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
--- 7832,7838 ----
  static SwigV8ReturnValue _wrap_percentile(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    int arg3 ;
***************
*** 7896,7902 ****
  static SwigV8ReturnValue _wrap_average(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long val1 ;
--- 7896,7902 ----
  static SwigV8ReturnValue _wrap_average(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long val1 ;
***************
*** 7951,7957 ****
  static SwigV8ReturnValue _wrap_stddev(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long val1 ;
--- 7951,7957 ----
  static SwigV8ReturnValue _wrap_stddev(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long val1 ;
***************
*** 8006,8012 ****
  static SwigV8ReturnValue _wrap_covariance1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    double *arg1 = (double *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 8006,8012 ----
  static SwigV8ReturnValue _wrap_covariance1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    double *arg1 = (double *) 0 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 8115,8121 ****
  static SwigV8ReturnValue _wrap_mAve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8115,8121 ----
  static SwigV8ReturnValue _wrap_mAve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 8214,8220 ****
  static SwigV8ReturnValue _wrap_mSum(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8214,8220 ----
  static SwigV8ReturnValue _wrap_mSum(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 8313,8319 ****
  static SwigV8ReturnValue _wrap_mProd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8313,8319 ----
  static SwigV8ReturnValue _wrap_mProd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 8412,8418 ****
  static SwigV8ReturnValue _wrap_mCovar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 8412,8418 ----
  static SwigV8ReturnValue _wrap_mCovar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 8538,8544 ****
  static SwigV8ReturnValue _wrap_mCorrel(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 8538,8544 ----
  static SwigV8ReturnValue _wrap_mCorrel(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 8664,8670 ****
  static SwigV8ReturnValue _wrap_mVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8664,8670 ----
  static SwigV8ReturnValue _wrap_mVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 8763,8769 ****
  static SwigV8ReturnValue _wrap_mStddev(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8763,8769 ----
  static SwigV8ReturnValue _wrap_mStddev(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 8862,8868 ****
  static SwigV8ReturnValue _wrap_cAve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8862,8868 ----
  static SwigV8ReturnValue _wrap_cAve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 8952,8958 ****
  static SwigV8ReturnValue _wrap_cSum(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 8952,8958 ----
  static SwigV8ReturnValue _wrap_cSum(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 9042,9048 ****
  static SwigV8ReturnValue _wrap_cProd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 9042,9048 ----
  static SwigV8ReturnValue _wrap_cProd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 9132,9138 ****
  static SwigV8ReturnValue _wrap_cCovar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 9132,9138 ----
  static SwigV8ReturnValue _wrap_cCovar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 9249,9255 ****
  static SwigV8ReturnValue _wrap_cCorrel(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 9249,9255 ----
  static SwigV8ReturnValue _wrap_cCorrel(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 9366,9372 ****
  static SwigV8ReturnValue _wrap_cVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 9366,9372 ----
  static SwigV8ReturnValue _wrap_cVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 9456,9462 ****
  static SwigV8ReturnValue _wrap_cStddev(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
--- 9456,9462 ----
  static SwigV8ReturnValue _wrap_cStddev(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    unsigned long arg3 ;
***************
*** 9546,9552 ****
  static SwigV8ReturnValue _wrap_prodArrays(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 9546,9552 ----
  static SwigV8ReturnValue _wrap_prodArrays(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 9654,9660 ****
  static SwigV8ReturnValue _wrap_wAve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 9654,9660 ----
  static SwigV8ReturnValue _wrap_wAve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 9736,9742 ****
  static SwigV8ReturnValue _wrap_wAveProd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 9736,9742 ----
  static SwigV8ReturnValue _wrap_wAveProd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 9845,9851 ****
  static SwigV8ReturnValue _wrap_wCovar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 9845,9851 ----
  static SwigV8ReturnValue _wrap_wCovar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    unsigned long arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 9954,9960 ****
  static SwigV8ReturnValue _wrap_ddotvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 9954,9960 ----
  static SwigV8ReturnValue _wrap_ddotvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10036,10042 ****
  static SwigV8ReturnValue _wrap_genmult(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 10036,10042 ----
  static SwigV8ReturnValue _wrap_genmult(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 10153,10159 ****
  static SwigV8ReturnValue _wrap_getFSF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 10153,10159 ----
  static SwigV8ReturnValue _wrap_getFSF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 10270,10276 ****
  static SwigV8ReturnValue _wrap_DOT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10270,10276 ----
  static SwigV8ReturnValue _wrap_DOT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10352,10358 ****
  static SwigV8ReturnValue _wrap_combineS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10352,10358 ----
  static SwigV8ReturnValue _wrap_combineS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10460,10466 ****
  static SwigV8ReturnValue _wrap_symm_inverse_x(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10460,10466 ----
  static SwigV8ReturnValue _wrap_symm_inverse_x(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10568,10574 ****
  static SwigV8ReturnValue _wrap_vec2symm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10568,10574 ----
  static SwigV8ReturnValue _wrap_vec2symm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10649,10655 ****
  static SwigV8ReturnValue _wrap_symmsymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10649,10655 ----
  static SwigV8ReturnValue _wrap_symmsymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10757,10763 ****
  static SwigV8ReturnValue _wrap_Sinv_X(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10757,10763 ----
  static SwigV8ReturnValue _wrap_Sinv_X(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10865,10871 ****
  static SwigV8ReturnValue _wrap_A1MA2(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 10865,10871 ----
  static SwigV8ReturnValue _wrap_A1MA2(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 10974,10980 ****
  static SwigV8ReturnValue _wrap_square2symm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
--- 10974,10980 ----
  static SwigV8ReturnValue _wrap_square2symm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
***************
*** 11028,11034 ****
  static SwigV8ReturnValue _wrap_square2sqsymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
--- 11028,11034 ----
  static SwigV8ReturnValue _wrap_square2sqsymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
***************
*** 11082,11088 ****
  static SwigV8ReturnValue _wrap_gensymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 11082,11088 ----
  static SwigV8ReturnValue _wrap_gensymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 11190,11196 ****
  static SwigV8ReturnValue _wrap_Sinv_M(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 11190,11196 ----
  static SwigV8ReturnValue _wrap_Sinv_M(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 11271,11277 ****
  static SwigV8ReturnValue _wrap_AdotSiAX(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 11271,11277 ----
  static SwigV8ReturnValue _wrap_AdotSiAX(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 11407,11413 ****
  static SwigV8ReturnValue _wrap_AdotSi(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 11407,11413 ----
  static SwigV8ReturnValue _wrap_AdotSi(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 11489,11495 ****
  static SwigV8ReturnValue _wrap_SiAX(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 11489,11495 ----
  static SwigV8ReturnValue _wrap_SiAX(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 11624,11630 ****
  static SwigV8ReturnValue _wrap_Sisymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 11624,11630 ----
  static SwigV8ReturnValue _wrap_Sisymm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 11705,11711 ****
  static SwigV8ReturnValue _wrap_OptSemi(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 11705,11711 ----
  static SwigV8ReturnValue _wrap_OptSemi(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 11877,11883 ****
  static SwigV8ReturnValue _wrap_OptSemiGen(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 11877,11883 ----
  static SwigV8ReturnValue _wrap_OptSemiGen(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 12031,12037 ****
  static SwigV8ReturnValue _wrap_vecvec2symmat(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 12031,12037 ----
  static SwigV8ReturnValue _wrap_vecvec2symmat(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 12139,12145 ****
  static SwigV8ReturnValue _wrap_Amake(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 12139,12145 ----
  static SwigV8ReturnValue _wrap_Amake(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 12265,12271 ****
  static SwigV8ReturnValue _wrap_OptFundClass(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 12265,12271 ----
  static SwigV8ReturnValue _wrap_OptFundClass(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 12392,12398 ****
  static SwigV8ReturnValue _wrap_Factor2Cov(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 12392,12398 ----
  static SwigV8ReturnValue _wrap_Factor2Cov(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 12536,12542 ****
  static SwigV8ReturnValue _wrap_Factor2Var(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 12536,12542 ----
  static SwigV8ReturnValue _wrap_Factor2Var(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 12680,12686 ****
  static SwigV8ReturnValue _wrap_opt_fix(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 12680,12686 ----
  static SwigV8ReturnValue _wrap_opt_fix(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 12780,12786 ****
  static SwigV8ReturnValue _wrap_eig_fix(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
--- 12780,12786 ----
  static SwigV8ReturnValue _wrap_eig_fix(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
***************
*** 12835,12841 ****
  static SwigV8ReturnValue _wrap_quad_fix(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 12835,12841 ----
  static SwigV8ReturnValue _wrap_quad_fix(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 12917,12923 ****
  static SwigV8ReturnValue _wrap_basic_factor_global_local_attribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
--- 12917,12923 ----
  static SwigV8ReturnValue _wrap_basic_factor_global_local_attribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 13511,13517 ****
  static SwigV8ReturnValue _wrap_basic_factor_global_local_attribution1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
--- 13511,13517 ----
  static SwigV8ReturnValue _wrap_basic_factor_global_local_attribution1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 13997,14003 ****
  static SwigV8ReturnValue _wrap_xCx(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 13997,14003 ----
  static SwigV8ReturnValue _wrap_xCx(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 14079,14085 ****
  static SwigV8ReturnValue _wrap_gausspdf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    double arg1 = (double) 0 ;
    double arg2 = (double) 1 ;
    size_t arg3 = (size_t) 0 ;
--- 14079,14085 ----
  static SwigV8ReturnValue _wrap_gausspdf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    double arg1 = (double) 0 ;
    double arg2 = (double) 1 ;
    size_t arg3 = (size_t) 0 ;
***************
*** 14125,14131 ****
  static SwigV8ReturnValue _wrap_resampfront(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 14125,14131 ----
  static SwigV8ReturnValue _wrap_resampfront(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 14718,14724 ****
  static SwigV8ReturnValue _wrap_manyVars(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 14718,14724 ----
  static SwigV8ReturnValue _wrap_manyVars(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 14889,14895 ****
  static SwigV8ReturnValue _wrap_ManyVarsD(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 14889,14895 ----
  static SwigV8ReturnValue _wrap_ManyVarsD(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 15060,15066 ****
  static SwigV8ReturnValue _wrap_manyVarsX(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 15060,15066 ----
  static SwigV8ReturnValue _wrap_manyVarsX(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 15240,15246 ****
  static SwigV8ReturnValue _wrap_dmxtmulv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 15240,15246 ----
  static SwigV8ReturnValue _wrap_dmxtmulv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 15357,15363 ****
  static SwigV8ReturnValue _wrap_dmxmulv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 15357,15363 ----
  static SwigV8ReturnValue _wrap_dmxmulv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 15474,15480 ****
  static SwigV8ReturnValue _wrap_dmxtmultv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 15474,15480 ----
  static SwigV8ReturnValue _wrap_dmxtmultv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 15591,15597 ****
  static SwigV8ReturnValue _wrap_BITA_dgemv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
--- 15591,15597 ----
  static SwigV8ReturnValue _wrap_BITA_dgemv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 15765,15771 ****
  static SwigV8ReturnValue _wrap_SriskAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 15765,15771 ----
  static SwigV8ReturnValue _wrap_SriskAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 15936,15942 ****
  static SwigV8ReturnValue _wrap_SvarianceAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 15936,15942 ----
  static SwigV8ReturnValue _wrap_SvarianceAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 16107,16113 ****
  static SwigV8ReturnValue _wrap_FriskAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 16107,16113 ----
  static SwigV8ReturnValue _wrap_FriskAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 16557,16563 ****
  static SwigV8ReturnValue _wrap_FvarianceAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 16557,16563 ----
  static SwigV8ReturnValue _wrap_FvarianceAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 17044,17050 ****
  static SwigV8ReturnValue _wrap_FexposureAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 17044,17050 ----
  static SwigV8ReturnValue _wrap_FexposureAttribution(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 17260,17266 ****
  static SwigV8ReturnValue _wrap_MCTR_Beta(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    size_t arg2 ;
    char **arg3 = (char **) 0 ;
--- 17260,17266 ----
  static SwigV8ReturnValue _wrap_MCTR_Beta(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    size_t arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 17572,17578 ****
  static SwigV8ReturnValue _wrap_SOCPopt1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t *arg3 = (size_t *) 0 ;
--- 17572,17578 ----
  static SwigV8ReturnValue _wrap_SOCPopt1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t *arg3 = (size_t *) 0 ;
***************
*** 17762,17768 ****
  static SwigV8ReturnValue _wrap_SOCPopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t *arg3 = (size_t *) 0 ;
--- 17762,17768 ----
  static SwigV8ReturnValue _wrap_SOCPopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t *arg3 = (size_t *) 0 ;
***************
*** 17988,17994 ****
  static SwigV8ReturnValue _wrap_SOCPgenopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t *arg3 = (size_t *) 0 ;
--- 17988,17994 ----
  static SwigV8ReturnValue _wrap_SOCPgenopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t *arg3 = (size_t *) 0 ;
***************
*** 18241,18247 ****
  static SwigV8ReturnValue _wrap_testSOCPinf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_testSOCPinf.");
    
--- 18241,18247 ----
  static SwigV8ReturnValue _wrap_testSOCPinf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_testSOCPinf.");
    
***************
*** 18259,18265 ****
  static SwigV8ReturnValue _wrap_SOCPinfeasHomogtDUMP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    int *arg3 = (int *) 0 ;
--- 18259,18265 ----
  static SwigV8ReturnValue _wrap_SOCPinfeasHomogtDUMP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    int *arg3 = (int *) 0 ;
***************
*** 18647,18653 ****
  static SwigV8ReturnValue _wrap_SOCPinfeasHomogt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    int *arg3 = (int *) 0 ;
--- 18647,18653 ----
  static SwigV8ReturnValue _wrap_SOCPinfeasHomogt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    int *arg3 = (int *) 0 ;
***************
*** 19036,19042 ****
  static SwigV8ReturnValue _wrap_RootProcessQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 19036,19042 ----
  static SwigV8ReturnValue _wrap_RootProcessQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 19144,19150 ****
  static SwigV8ReturnValue _wrap_RootQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 19144,19150 ----
  static SwigV8ReturnValue _wrap_RootQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 19252,19258 ****
  static SwigV8ReturnValue _wrap_RootQgram(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 19252,19258 ----
  static SwigV8ReturnValue _wrap_RootQgram(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 19360,19366 ****
  static SwigV8ReturnValue _wrap_RootQold(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 19360,19366 ----
  static SwigV8ReturnValue _wrap_RootQold(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 19468,19474 ****
  static SwigV8ReturnValue _wrap_fixA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    short_scl *arg3 = (short_scl *) 0 ;
--- 19468,19474 ----
  static SwigV8ReturnValue _wrap_fixA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    short_scl *arg3 = (short_scl *) 0 ;
***************
*** 19559,19565 ****
  static SwigV8ReturnValue _wrap_DroppingOut(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 19559,19565 ----
  static SwigV8ReturnValue _wrap_DroppingOut(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 19703,19709 ****
  static SwigV8ReturnValue _wrap_SOCPlstest(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 19703,19709 ----
  static SwigV8ReturnValue _wrap_SOCPlstest(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 20100,20106 ****
  static SwigV8ReturnValue _wrap_SOCPRobust(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 20100,20106 ----
  static SwigV8ReturnValue _wrap_SOCPRobust(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 20551,20557 ****
  static SwigV8ReturnValue _wrap_SOCPlsRobust(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 20551,20557 ----
  static SwigV8ReturnValue _wrap_SOCPlsRobust(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 21092,21098 ****
  static SwigV8ReturnValue _wrap_SOCPlsRobustl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 21092,21098 ----
  static SwigV8ReturnValue _wrap_SOCPlsRobustl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 21683,21689 ****
  static SwigV8ReturnValue _wrap_SOCPlsRobustlC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 21683,21689 ----
  static SwigV8ReturnValue _wrap_SOCPlsRobustlC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 22256,22262 ****
  static SwigV8ReturnValue _wrap_Projection(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 22256,22262 ----
  static SwigV8ReturnValue _wrap_Projection(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 22400,22406 ****
  static SwigV8ReturnValue _wrap_CovarianceInverter(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 22400,22406 ----
  static SwigV8ReturnValue _wrap_CovarianceInverter(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 22535,22541 ****
  static SwigV8ReturnValue _wrap_RankingConstraints(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 22535,22541 ----
  static SwigV8ReturnValue _wrap_RankingConstraints(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 22706,22712 ****
  static SwigV8ReturnValue _wrap_SOCPRanked(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 22706,22712 ----
  static SwigV8ReturnValue _wrap_SOCPRanked(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 23013,23019 ****
  static SwigV8ReturnValue _wrap_dsptrf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 23013,23019 ----
  static SwigV8ReturnValue _wrap_dsptrf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 23109,23115 ****
  static SwigV8ReturnValue _wrap_dsptrs(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
--- 23109,23115 ----
  static SwigV8ReturnValue _wrap_dsptrs(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 23250,23256 ****
  static SwigV8ReturnValue _wrap_applyA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
--- 23250,23256 ----
  static SwigV8ReturnValue _wrap_applyA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 23391,23397 ****
  static SwigV8ReturnValue _wrap_applyrootA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 23391,23397 ----
  static SwigV8ReturnValue _wrap_applyrootA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 23518,23524 ****
  static SwigV8ReturnValue _wrap_applyinverserootA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 23518,23524 ----
  static SwigV8ReturnValue _wrap_applyinverserootA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 23645,23651 ****
  static SwigV8ReturnValue _wrap_ReorderNames(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    char **arg3 = (char **) 0 ;
--- 23645,23651 ----
  static SwigV8ReturnValue _wrap_ReorderNames(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    char **arg3 = (char **) 0 ;
***************
*** 23738,23744 ****
  static SwigV8ReturnValue _wrap_LPinterior(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 23738,23744 ----
  static SwigV8ReturnValue _wrap_LPinterior(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 24235,24241 ****
  static SwigV8ReturnValue _wrap_QPopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 24235,24241 ----
  static SwigV8ReturnValue _wrap_QPopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 24480,24486 ****
  static SwigV8ReturnValue _wrap_LPopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 24480,24486 ----
  static SwigV8ReturnValue _wrap_LPopt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 24679,24685 ****
  static SwigV8ReturnValue _wrap_QPbySeqLP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 24679,24685 ----
  static SwigV8ReturnValue _wrap_QPbySeqLP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 24933,24939 ****
  static SwigV8ReturnValue _wrap_QPinterior(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 24933,24939 ----
  static SwigV8ReturnValue _wrap_QPinterior(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 25430,25436 ****
  static SwigV8ReturnValue _wrap_facmul(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 25430,25436 ----
  static SwigV8ReturnValue _wrap_facmul(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 25545,25551 ****
  static SwigV8ReturnValue _wrap_facmuli(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 25545,25551 ----
  static SwigV8ReturnValue _wrap_facmuli(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 25660,25666 ****
  static SwigV8ReturnValue _wrap_FastInverseFactorModelProcess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 25660,25666 ----
  static SwigV8ReturnValue _wrap_FastInverseFactorModelProcess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 25804,25810 ****
  static SwigV8ReturnValue _wrap_MakeUU(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 25804,25810 ----
  static SwigV8ReturnValue _wrap_MakeUU(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 25885,25891 ****
  static SwigV8ReturnValue _wrap_fastInverse(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 25885,25891 ----
  static SwigV8ReturnValue _wrap_fastInverse(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 26020,26026 ****
  static SwigV8ReturnValue _wrap_OmegaOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 26020,26026 ----
  static SwigV8ReturnValue _wrap_OmegaOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 26240,26246 ****
  static SwigV8ReturnValue _wrap_FindR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 26240,26246 ----
  static SwigV8ReturnValue _wrap_FindR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 26352,26358 ****
  static SwigV8ReturnValue _wrap_RobustOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 26352,26358 ----
  static SwigV8ReturnValue _wrap_RobustOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 26821,26827 ****
  static SwigV8ReturnValue _wrap_RobustOptU(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 26821,26827 ----
  static SwigV8ReturnValue _wrap_RobustOptU(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 27317,27323 ****
  static SwigV8ReturnValue _wrap_QuadCVals(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 27317,27323 ----
  static SwigV8ReturnValue _wrap_QuadCVals(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 27614,27620 ****
  static SwigV8ReturnValue _wrap_IncreaseL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
--- 27614,27620 ----
  static SwigV8ReturnValue _wrap_IncreaseL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 27713,27719 ****
  static SwigV8ReturnValue _wrap_OmegaSVOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 27713,27719 ----
  static SwigV8ReturnValue _wrap_OmegaSVOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 27933,27939 ****
  static SwigV8ReturnValue _wrap_OmegaGeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
--- 27933,27939 ----
  static SwigV8ReturnValue _wrap_OmegaGeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 28302,28308 ****
  static SwigV8ReturnValue _wrap_OmegaGeneralP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
--- 28302,28308 ----
  static SwigV8ReturnValue _wrap_OmegaGeneralP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 28680,28686 ****
  static SwigV8ReturnValue _wrap_OmegaGeneralPDump(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
--- 28680,28686 ----
  static SwigV8ReturnValue _wrap_OmegaGeneralPDump(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 29057,29063 ****
  static SwigV8ReturnValue _wrap_OmegaProps(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 29057,29063 ----
  static SwigV8ReturnValue _wrap_OmegaProps(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 29345,29351 ****
  static SwigV8ReturnValue _wrap_QPbySOCP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 29345,29351 ----
  static SwigV8ReturnValue _wrap_QPbySOCP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 29580,29586 ****
  static SwigV8ReturnValue _wrap_OmegaH(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 29580,29586 ----
  static SwigV8ReturnValue _wrap_OmegaH(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 29760,29766 ****
  static SwigV8ReturnValue _wrap_clean_w(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
--- 29760,29766 ----
  static SwigV8ReturnValue _wrap_clean_w(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
***************
*** 29814,29820 ****
  static SwigV8ReturnValue _wrap_trace(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
--- 29814,29820 ----
  static SwigV8ReturnValue _wrap_trace(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
***************
*** 29869,29875 ****
  static SwigV8ReturnValue _wrap_anneal(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 29869,29875 ----
  static SwigV8ReturnValue _wrap_anneal(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 30051,30057 ****
  static SwigV8ReturnValue _wrap_ThetaMulti(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    long arg2 ;
    size_t arg3 ;
--- 30051,30057 ----
  static SwigV8ReturnValue _wrap_ThetaMulti(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    long arg2 ;
    size_t arg3 ;
***************
*** 30495,30501 ****
  static SwigV8ReturnValue _wrap_Lsmooth(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 30495,30501 ----
  static SwigV8ReturnValue _wrap_Lsmooth(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 30828,30834 ****
  static SwigV8ReturnValue _wrap_SemiVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 30828,30834 ----
  static SwigV8ReturnValue _wrap_SemiVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 31035,31041 ****
  static SwigV8ReturnValue _wrap_GeneralLongOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    char **arg3 = (char **) 0 ;
--- 31035,31041 ----
  static SwigV8ReturnValue _wrap_GeneralLongOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 31285,31291 ****
  static SwigV8ReturnValue _wrap_LPhelper(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 31285,31291 ----
  static SwigV8ReturnValue _wrap_LPhelper(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 31480,31486 ****
  static SwigV8ReturnValue _wrap_LPgeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 31480,31486 ----
  static SwigV8ReturnValue _wrap_LPgeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 31909,31915 ****
  static SwigV8ReturnValue _wrap_RobustOptDump(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 31909,31915 ----
  static SwigV8ReturnValue _wrap_RobustOptDump(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 32391,32397 ****
  static SwigV8ReturnValue _wrap_LPFullNewton(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 32391,32397 ----
  static SwigV8ReturnValue _wrap_LPFullNewton(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 32563,32569 ****
  static SwigV8ReturnValue _wrap_LPbySOCPp(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 32563,32569 ----
  static SwigV8ReturnValue _wrap_LPbySOCPp(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 32708,32714 ****
  static SwigV8ReturnValue _wrap_LPbySOCP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 32708,32714 ----
  static SwigV8ReturnValue _wrap_LPbySOCP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 32880,32886 ****
  static SwigV8ReturnValue _wrap_LPstraight(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 32880,32886 ----
  static SwigV8ReturnValue _wrap_LPstraight(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 33052,33058 ****
  static SwigV8ReturnValue _wrap_GainLossOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 33052,33058 ----
  static SwigV8ReturnValue _wrap_GainLossOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 33446,33452 ****
  static SwigV8ReturnValue _wrap_GainLossOptGen(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 33446,33452 ----
  static SwigV8ReturnValue _wrap_GainLossOptGen(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 33840,33846 ****
  static SwigV8ReturnValue _wrap_GLOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 33840,33846 ----
  static SwigV8ReturnValue _wrap_GLOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 34632,34638 ****
  static SwigV8ReturnValue _wrap_GLOptimiseR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 34632,34638 ----
  static SwigV8ReturnValue _wrap_GLOptimiseR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 35559,35565 ****
  static SwigV8ReturnValue _wrap_GLOptimiseRC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 35559,35565 ----
  static SwigV8ReturnValue _wrap_GLOptimiseRC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 36558,36564 ****
  static SwigV8ReturnValue _wrap_GLProp(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    size_t arg3 ;
--- 36558,36564 ----
  static SwigV8ReturnValue _wrap_GLProp(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    size_t arg3 ;
***************
*** 36867,36873 ****
  static SwigV8ReturnValue _wrap_bunchf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    short_scl arg1 ;
    double *arg2 = (double *) 0 ;
    short_scl *arg3 = (short_scl *) 0 ;
--- 36867,36873 ----
  static SwigV8ReturnValue _wrap_bunchf(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    short_scl arg1 ;
    double *arg2 = (double *) 0 ;
    short_scl *arg3 = (short_scl *) 0 ;
***************
*** 36949,36955 ****
  static SwigV8ReturnValue _wrap_MVLOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 36949,36955 ----
  static SwigV8ReturnValue _wrap_MVLOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 37723,37729 ****
  static SwigV8ReturnValue _wrap_MVLOptimiseg(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 37723,37729 ----
  static SwigV8ReturnValue _wrap_MVLOptimiseg(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 38524,38530 ****
  static SwigV8ReturnValue _wrap_MVLOptimiseR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 38524,38530 ----
  static SwigV8ReturnValue _wrap_MVLOptimiseR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 39433,39439 ****
  static SwigV8ReturnValue _wrap_MVLOptimiseRC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 39433,39439 ----
  static SwigV8ReturnValue _wrap_MVLOptimiseRC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 40414,40420 ****
  static SwigV8ReturnValue _wrap_GLO_internal_model(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 40414,40420 ----
  static SwigV8ReturnValue _wrap_GLO_internal_model(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 40531,40537 ****
  static SwigV8ReturnValue _wrap_CvarOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 40531,40537 ----
  static SwigV8ReturnValue _wrap_CvarOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 41350,41356 ****
  static SwigV8ReturnValue _wrap_CvarOptimiseC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 41350,41356 ----
  static SwigV8ReturnValue _wrap_CvarOptimiseC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 42259,42265 ****
  static SwigV8ReturnValue _wrap_SemiVariance(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 42259,42265 ----
  static SwigV8ReturnValue _wrap_SemiVariance(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 42377,42383 ****
  static SwigV8ReturnValue _wrap_GradSemiVariance(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 42377,42383 ----
  static SwigV8ReturnValue _wrap_GradSemiVariance(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 42521,42527 ****
  static SwigV8ReturnValue _wrap_HessSemiVariance(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 42521,42527 ----
  static SwigV8ReturnValue _wrap_HessSemiVariance(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 42665,42671 ****
  static SwigV8ReturnValue _wrap_SemiVarOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    size_t arg3 ;
--- 42665,42671 ----
  static SwigV8ReturnValue _wrap_SemiVarOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    size_t arg3 ;
***************
*** 43412,43418 ****
  static SwigV8ReturnValue _wrap_SemiVarOptimiseT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    size_t arg3 ;
--- 43412,43418 ----
  static SwigV8ReturnValue _wrap_SemiVarOptimiseT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    char **arg2 = (char **) 0 ;
    size_t arg3 ;
***************
*** 44159,44165 ****
  static SwigV8ReturnValue _wrap_CVarValue(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 44159,44165 ----
  static SwigV8ReturnValue _wrap_CVarValue(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 44259,44265 ****
  static SwigV8ReturnValue _wrap_CVarGrad(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 44259,44265 ----
  static SwigV8ReturnValue _wrap_CVarGrad(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 44385,44391 ****
  static SwigV8ReturnValue _wrap_CVarValueO(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 44385,44391 ----
  static SwigV8ReturnValue _wrap_CVarValueO(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 44485,44491 ****
  static SwigV8ReturnValue _wrap_CVarValuen(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 44485,44491 ----
  static SwigV8ReturnValue _wrap_CVarValuen(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 44585,44591 ****
  static SwigV8ReturnValue _wrap_OptCVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    dimen arg3 ;
--- 44585,44591 ----
  static SwigV8ReturnValue _wrap_OptCVar(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 44838,44844 ****
  static SwigV8ReturnValue _wrap_OptGL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    dimen arg3 ;
--- 44838,44844 ----
  static SwigV8ReturnValue _wrap_OptGL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 45118,45124 ****
  static SwigV8ReturnValue _wrap_AQAmake(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 45118,45124 ----
  static SwigV8ReturnValue _wrap_AQAmake(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 45290,45296 ****
  static SwigV8ReturnValue _wrap_FixedAtEnd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 45290,45296 ----
  static SwigV8ReturnValue _wrap_FixedAtEnd(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 45399,45405 ****
  static SwigV8ReturnValue _wrap_SOCPportfolio(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 45399,45405 ----
  static SwigV8ReturnValue _wrap_SOCPportfolio(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 46292,46298 ****
  static SwigV8ReturnValue _wrap_getmacaddress(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_getmacaddress.");
    
--- 46292,46298 ----
  static SwigV8ReturnValue _wrap_getmacaddress(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_getmacaddress.");
    
***************
*** 46310,46316 ****
  static SwigV8ReturnValue _wrap_remtime(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    int result;
    
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_remtime.");
--- 46310,46316 ----
  static SwigV8ReturnValue _wrap_remtime(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    int result;
    
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_remtime.");
***************
*** 46329,46335 ****
  static SwigV8ReturnValue _wrap_Optimise_Entropy(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 46329,46335 ----
  static SwigV8ReturnValue _wrap_Optimise_Entropy(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 47256,47262 ****
  static SwigV8ReturnValue _wrap_EntropyUtility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 47256,47262 ----
  static SwigV8ReturnValue _wrap_EntropyUtility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 47601,47607 ****
  static SwigV8ReturnValue _wrap_Optimise_EntropyU(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 47601,47607 ----
  static SwigV8ReturnValue _wrap_Optimise_EntropyU(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 48528,48534 ****
  static SwigV8ReturnValue _wrap_OptimiseCrossEntropy(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 48528,48534 ----
  static SwigV8ReturnValue _wrap_OptimiseCrossEntropy(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 49203,49209 ****
  static SwigV8ReturnValue _wrap_SDPsvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 49203,49209 ----
  static SwigV8ReturnValue _wrap_SDPsvec(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 49284,49290 ****
  static SwigV8ReturnValue _wrap_SDPsMat(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 49284,49290 ----
  static SwigV8ReturnValue _wrap_SDPsMat(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 49365,49371 ****
  static SwigV8ReturnValue _wrap_nullA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
--- 49365,49371 ----
  static SwigV8ReturnValue _wrap_nullA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 49454,49460 ****
  static SwigV8ReturnValue _wrap_LPQN(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 49454,49460 ----
  static SwigV8ReturnValue _wrap_LPQN(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 49599,49605 ****
  static SwigV8ReturnValue _wrap_GAUSS_NEWTON_Optimiser(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    size_t *arg3 = (size_t *) 0 ;
--- 49599,49605 ----
  static SwigV8ReturnValue _wrap_GAUSS_NEWTON_Optimiser(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t *arg2 = (size_t *) 0 ;
    size_t *arg3 = (size_t *) 0 ;
***************
*** 49852,49858 ****
  static SwigV8ReturnValue _wrap_packed2symm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    int val1 ;
--- 49852,49858 ----
  static SwigV8ReturnValue _wrap_packed2symm(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    int val1 ;
***************
*** 49906,49912 ****
  static SwigV8ReturnValue _wrap_symm2packed(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    int val1 ;
--- 49906,49912 ----
  static SwigV8ReturnValue _wrap_symm2packed(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    int val1 ;
***************
*** 49960,49966 ****
  static SwigV8ReturnValue _wrap_Conic_General(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
--- 49960,49966 ----
  static SwigV8ReturnValue _wrap_Conic_General(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
***************
*** 50344,50350 ****
  static SwigV8ReturnValue _wrap_get_w(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 50344,50350 ----
  static SwigV8ReturnValue _wrap_get_w(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 50452,50458 ****
  static SwigV8ReturnValue _wrap_WtransSDP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 50452,50458 ----
  static SwigV8ReturnValue _wrap_WtransSDP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 50578,50584 ****
  static SwigV8ReturnValue _wrap_applyXSDP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 50578,50584 ----
  static SwigV8ReturnValue _wrap_applyXSDP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 50686,50692 ****
  static SwigV8ReturnValue _wrap_applyXm1SDP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 50686,50692 ----
  static SwigV8ReturnValue _wrap_applyXm1SDP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 50794,50800 ****
  static SwigV8ReturnValue _wrap_SDPsymm2MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 50794,50800 ----
  static SwigV8ReturnValue _wrap_SDPsymm2MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 50884,50890 ****
  static SwigV8ReturnValue _wrap_factor_model_process_inverse(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 50884,50890 ----
  static SwigV8ReturnValue _wrap_factor_model_process_inverse(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 50974,50980 ****
  static SwigV8ReturnValue _wrap_facmul_and_inv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 50974,50980 ----
  static SwigV8ReturnValue _wrap_facmul_and_inv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 51100,51106 ****
  static SwigV8ReturnValue _wrap_small_round(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
--- 51100,51106 ----
  static SwigV8ReturnValue _wrap_small_round(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
***************
*** 51128,51134 ****
  static SwigV8ReturnValue _wrap_make_indexM(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
--- 51128,51134 ----
  static SwigV8ReturnValue _wrap_make_indexM(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
***************
*** 51263,51269 ****
  static SwigV8ReturnValue _wrap_pull_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    double *arg2 = (double *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
--- 51263,51269 ----
  static SwigV8ReturnValue _wrap_pull_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    double *arg2 = (double *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
***************
*** 51658,51664 ****
  static SwigV8ReturnValue _wrap_sns_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    double *arg3 = (double *) 0 ;
--- 51658,51664 ----
  static SwigV8ReturnValue _wrap_sns_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 52001,52007 ****
  static SwigV8ReturnValue _wrap_ssf_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
--- 52001,52007 ----
  static SwigV8ReturnValue _wrap_ssf_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
***************
*** 52425,52431 ****
  static SwigV8ReturnValue _wrap_A2U(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer arg1 ;
    Integer *arg2 = (Integer *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
--- 52425,52431 ----
  static SwigV8ReturnValue _wrap_A2U(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer arg1 ;
    Integer *arg2 = (Integer *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
***************
*** 52614,52620 ****
  static SwigV8ReturnValue _wrap_UseSparseCh(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 52614,52620 ----
  static SwigV8ReturnValue _wrap_UseSparseCh(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 52695,52701 ****
  static SwigV8ReturnValue _wrap_Conic_VeryGeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
--- 52695,52701 ----
  static SwigV8ReturnValue _wrap_Conic_VeryGeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    int *arg2 = (int *) 0 ;
    int *arg3 = (int *) 0 ;
***************
*** 53187,53193 ****
  static SwigV8ReturnValue _wrap_lowrank_facmul_and_inv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 53187,53193 ----
  static SwigV8ReturnValue _wrap_lowrank_facmul_and_inv(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 53367,53373 ****
  static SwigV8ReturnValue _wrap_process_lowrank_plus_symm_inverse(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 53367,53373 ----
  static SwigV8ReturnValue _wrap_process_lowrank_plus_symm_inverse(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 53511,53517 ****
  static SwigV8ReturnValue _wrap_W2trans(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 53511,53517 ----
  static SwigV8ReturnValue _wrap_W2trans(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 53619,53625 ****
  static SwigV8ReturnValue _wrap_Wtrans(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 53619,53625 ----
  static SwigV8ReturnValue _wrap_Wtrans(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 53727,53733 ****
  static SwigV8ReturnValue _wrap_SDPwsymm2MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double arg3 ;
--- 53727,53733 ----
  static SwigV8ReturnValue _wrap_SDPwsymm2MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    double arg3 ;
***************
*** 53826,53832 ****
  static SwigV8ReturnValue _wrap_SDPvec2MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 53826,53832 ----
  static SwigV8ReturnValue _wrap_SDPvec2MCAR(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 53916,53922 ****
  static SwigV8ReturnValue _wrap_RiskParityOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
--- 53916,53922 ----
  static SwigV8ReturnValue _wrap_RiskParityOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
***************
*** 54286,54292 ****
  static SwigV8ReturnValue _wrap_RiskParitySolveF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
--- 54286,54292 ----
  static SwigV8ReturnValue _wrap_RiskParitySolveF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
***************
*** 54575,54581 ****
  static SwigV8ReturnValue _wrap_RiskParitySolve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
--- 54575,54581 ----
  static SwigV8ReturnValue _wrap_RiskParitySolve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
***************
*** 54828,54834 ****
  static SwigV8ReturnValue _wrap_RiskParitySolve2(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
--- 54828,54834 ----
  static SwigV8ReturnValue _wrap_RiskParitySolve2(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
***************
*** 55108,55114 ****
  static SwigV8ReturnValue _wrap_SharpOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
--- 55108,55114 ----
  static SwigV8ReturnValue _wrap_SharpOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    long arg3 ;
***************
*** 55433,55439 ****
  static SwigV8ReturnValue _wrap_OptimiseGeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    dimen arg3 ;
--- 55433,55439 ----
  static SwigV8ReturnValue _wrap_OptimiseGeneral(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    dimen arg3 ;
***************
*** 55689,55695 ****
  static SwigV8ReturnValue _wrap_CanCastAsInteger(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    double *arg1 = (double *) 0 ;
    double arg2 ;
    double arg3 ;
--- 55689,55695 ----
  static SwigV8ReturnValue _wrap_CanCastAsInteger(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    double *arg1 = (double *) 0 ;
    double arg2 ;
    double arg3 ;
***************
*** 55753,55759 ****
  static SwigV8ReturnValue _wrap_dgetrf_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    double *arg3 = (double *) 0 ;
--- 55753,55759 ----
  static SwigV8ReturnValue _wrap_dgetrf_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 55934,55940 ****
  static SwigV8ReturnValue _wrap_dgetri_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    double *arg2 = (double *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
--- 55934,55940 ----
  static SwigV8ReturnValue _wrap_dgetri_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Integer *arg1 = (Integer *) 0 ;
    double *arg2 = (double *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
***************
*** 56142,56148 ****
  static SwigV8ReturnValue _wrap_dgetrs_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
--- 56142,56148 ----
  static SwigV8ReturnValue _wrap_dgetrs_BITA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) 0 ;
    Integer *arg2 = (Integer *) 0 ;
    Integer *arg3 = (Integer *) 0 ;
***************
*** 56391,56397 ****
  static SwigV8ReturnValue _wrap_Accumulation5_10_40(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    void *arg1 = (void *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 56391,56397 ----
  static SwigV8ReturnValue _wrap_Accumulation5_10_40(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    void *arg1 = (void *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 56442,56448 ****
  static SwigV8ReturnValue _wrap_EndRound(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
--- 56442,56448 ----
  static SwigV8ReturnValue _wrap_EndRound(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    double arg1 ;
    double val1 ;
    int ecode1 = 0 ;
***************
*** 56470,56476 ****
  static SwigV8ReturnValue _wrap_OptimiseGeneralBarrier(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 56470,56476 ----
  static SwigV8ReturnValue _wrap_OptimiseGeneralBarrier(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 56762,56768 ****
  static SwigV8ReturnValue _wrap_OptimiseNLC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 56762,56768 ----
  static SwigV8ReturnValue _wrap_OptimiseNLC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57055,57061 ****
  static SwigV8ReturnValue _wrap_OptimiseNLC1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57055,57061 ----
  static SwigV8ReturnValue _wrap_OptimiseNLC1(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57330,57336 ****
  static SwigV8ReturnValue _wrap_OptimiseNLC_Seq(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57330,57336 ----
  static SwigV8ReturnValue _wrap_OptimiseNLC_Seq(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57632,57638 ****
  static SwigV8ReturnValue _wrap_gramS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57632,57638 ----
  static SwigV8ReturnValue _wrap_gramS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57754,57760 ****
  static SwigV8ReturnValue _wrap_inverseT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57754,57760 ----
  static SwigV8ReturnValue _wrap_inverseT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57835,57841 ****
  static SwigV8ReturnValue _wrap_solveT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57835,57841 ----
  static SwigV8ReturnValue _wrap_solveT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57916,57922 ****
  static SwigV8ReturnValue _wrap_solveTt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57916,57922 ----
  static SwigV8ReturnValue _wrap_solveTt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 57997,58003 ****
  static SwigV8ReturnValue _wrap_multT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 57997,58003 ----
  static SwigV8ReturnValue _wrap_multT(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 58078,58084 ****
  static SwigV8ReturnValue _wrap_multTt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 58078,58084 ----
  static SwigV8ReturnValue _wrap_multTt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 58159,58165 ****
  static SwigV8ReturnValue _wrap_FixGram(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
--- 58159,58165 ----
  static SwigV8ReturnValue _wrap_FixGram(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    unsigned int val1 ;
***************
*** 58214,58220 ****
  static SwigV8ReturnValue _wrap_Arnoldi(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 58214,58220 ----
  static SwigV8ReturnValue _wrap_Arnoldi(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 58332,58338 ****
  static SwigV8ReturnValue _wrap_pattern6(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    double *arg3 = (double *) 0 ;
--- 58332,58338 ----
  static SwigV8ReturnValue _wrap_pattern6(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 58630,58636 ****
  static SwigV8ReturnValue _wrap_setunitHess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
--- 58630,58636 ----
  static SwigV8ReturnValue _wrap_setunitHess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
***************
*** 58684,58690 ****
  static SwigV8ReturnValue _wrap_findzero(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
--- 58684,58690 ----
  static SwigV8ReturnValue _wrap_findzero(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    size_t val1 ;
***************
*** 58739,58745 ****
  static SwigV8ReturnValue _wrap_parity_check(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    long arg2 ;
    vector arg3 = (vector) 0 ;
--- 58739,58745 ----
  static SwigV8ReturnValue _wrap_parity_check(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    long arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 58974,58980 ****
  static SwigV8ReturnValue _wrap_OptimiseNLCAL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    dimen arg3 ;
--- 58974,58980 ----
  static SwigV8ReturnValue _wrap_OptimiseNLCAL(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    dimen arg3 ;
***************
*** 59204,59210 ****
  static SwigV8ReturnValue _wrap_QuasiNewton(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    int arg3 ;
--- 59204,59210 ----
  static SwigV8ReturnValue _wrap_QuasiNewton(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    int arg3 ;
***************
*** 59359,59365 ****
  static SwigV8ReturnValue _wrap_multistage(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
--- 59359,59365 ----
  static SwigV8ReturnValue _wrap_multistage(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 59795,59801 ****
  static SwigV8ReturnValue _wrap_BasicQpOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 59795,59801 ----
  static SwigV8ReturnValue _wrap_BasicQpOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 60241,60247 ****
  static SwigV8ReturnValue _wrap_simplex(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
--- 60241,60247 ----
  static SwigV8ReturnValue _wrap_simplex(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    double *arg2 = (double *) 0 ;
    double *arg3 = (double *) 0 ;
***************
*** 60503,60509 ****
  static SwigV8ReturnValue _wrap_factor_model_process(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 60503,60509 ----
  static SwigV8ReturnValue _wrap_factor_model_process(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 60647,60653 ****
  static SwigV8ReturnValue _wrap_apt_model_process(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 60647,60653 ----
  static SwigV8ReturnValue _wrap_apt_model_process(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 60791,60797 ****
  static SwigV8ReturnValue _wrap_NaiveRound(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 60791,60797 ----
  static SwigV8ReturnValue _wrap_NaiveRound(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 60953,60959 ****
  static SwigV8ReturnValue _wrap_Solve1D(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    p1DFunc arg1 ;
    double arg2 = (double) 0 ;
    double arg3 = (double) .99999 ;
--- 60953,60959 ----
  static SwigV8ReturnValue _wrap_Solve1D(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    p1DFunc arg1 ;
    double arg2 = (double) 0 ;
    double arg3 = (double) .99999 ;
***************
*** 61018,61024 ****
  static SwigV8ReturnValue _wrap_PathMin(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    p1DFunc arg1 ;
    double arg2 = (double) 0 ;
    double arg3 = (double) .99999 ;
--- 61018,61024 ----
  static SwigV8ReturnValue _wrap_PathMin(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    p1DFunc arg1 ;
    double arg2 = (double) 0 ;
    double arg3 = (double) .99999 ;
***************
*** 61092,61098 ****
  static SwigV8ReturnValue _wrap_dmx_transpose(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 61092,61098 ----
  static SwigV8ReturnValue _wrap_dmx_transpose(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 61182,61188 ****
  static SwigV8ReturnValue _wrap_get_nfac(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) "modelgen.txt" ;
    int res1 ;
    char *buf1 = 0 ;
--- 61182,61188 ----
  static SwigV8ReturnValue _wrap_get_nfac(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) "modelgen.txt" ;
    int res1 ;
    char *buf1 = 0 ;
***************
*** 61215,61221 ****
  static SwigV8ReturnValue _wrap_getdata(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    char **arg3 = (char **) 0 ;
--- 61215,61221 ----
  static SwigV8ReturnValue _wrap_getdata(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    size_t arg1 ;
    size_t arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 61385,61391 ****
  static SwigV8ReturnValue _wrap_get_stocknames(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    char *arg2 = (char *) "modelgen.txt" ;
    int res2 ;
--- 61385,61391 ----
  static SwigV8ReturnValue _wrap_get_stocknames(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    char *arg2 = (char *) "modelgen.txt" ;
    int res2 ;
***************
*** 61456,61462 ****
  static SwigV8ReturnValue _wrap_get_nstocks(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char *arg1 = (char *) "modelgen.txt" ;
    int res1 ;
    char *buf1 = 0 ;
--- 61456,61462 ----
  static SwigV8ReturnValue _wrap_get_nstocks(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char *arg1 = (char *) "modelgen.txt" ;
    int res1 ;
    char *buf1 = 0 ;
***************
*** 61489,61495 ****
  static SwigV8ReturnValue _wrap_get_factornames(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    char *arg2 = (char *) "modelgen.txt" ;
    int res2 ;
--- 61489,61495 ----
  static SwigV8ReturnValue _wrap_get_factornames(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    char **arg1 = (char **) 0 ;
    char *arg2 = (char *) "modelgen.txt" ;
    int res2 ;
***************
*** 61560,61566 ****
  static SwigV8ReturnValue _wrap_conj_solve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 61560,61566 ----
  static SwigV8ReturnValue _wrap_conj_solve(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 61715,61721 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 61715,61721 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVP(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 62385,62391 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcosts(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 62385,62391 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcosts(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 63360,63366 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostsl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 63360,63366 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostsl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 64371,64377 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSa(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 64371,64377 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSa(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 65409,65415 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSaM(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 65409,65415 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSaM(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 66483,66489 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSaMS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 66483,66489 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSaMS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 67575,67581 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSaMSoft(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 67575,67581 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAextcostslSaMSoft(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 68883,68889 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 68883,68889 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 69702,69708 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 69702,69708 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 70665,70671 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFb(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 70665,70671 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFb(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 71691,71697 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFbl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 71691,71697 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFbl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 72753,72759 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 72753,72759 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 73869,73875 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSa(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 73869,73875 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSa(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 74958,74964 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaM(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 74958,74964 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaM(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 76083,76089 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 76083,76089 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMS(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 77226,77232 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMSoft(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 77226,77232 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMSoft(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 78495,78501 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMSoftQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 78495,78501 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMSoftQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 79872,79878 ****
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMSoftQV(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 79872,79878 ----
  static SwigV8ReturnValue _wrap_Optimise_internalCVPAFblSaMSoftQV(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 81285,81291 ****
  static SwigV8ReturnValue _wrap_FrontierCVPA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 81285,81291 ----
  static SwigV8ReturnValue _wrap_FrontierCVPA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 82189,82195 ****
  static SwigV8ReturnValue _wrap_FrontierCVPAF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 82189,82195 ----
  static SwigV8ReturnValue _wrap_FrontierCVPAF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 83183,83189 ****
  static SwigV8ReturnValue _wrap_FrontierCVPAFb(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 83183,83189 ----
  static SwigV8ReturnValue _wrap_FrontierCVPAFb(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 84222,84228 ****
  static SwigV8ReturnValue _wrap_FrontierCVPAFbl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 84222,84228 ----
  static SwigV8ReturnValue _wrap_FrontierCVPAFbl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 85297,85303 ****
  static SwigV8ReturnValue _wrap_FrontierCVPAFblQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 85297,85303 ----
  static SwigV8ReturnValue _wrap_FrontierCVPAFblQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 86426,86432 ****
  static SwigV8ReturnValue _wrap_FrontierCVPF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 86426,86432 ----
  static SwigV8ReturnValue _wrap_FrontierCVPF(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 87321,87327 ****
  static SwigV8ReturnValue _wrap_FrontierCVPAextcosts(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 87321,87327 ----
  static SwigV8ReturnValue _wrap_FrontierCVPAextcosts(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 88309,88315 ****
  static SwigV8ReturnValue _wrap_FrontierCVPAextcostsl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 88309,88315 ----
  static SwigV8ReturnValue _wrap_FrontierCVPAextcostsl(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 89333,89339 ****
  static SwigV8ReturnValue _wrap_PropertiesC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 89333,89339 ----
  static SwigV8ReturnValue _wrap_PropertiesC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 90011,90017 ****
  static SwigV8ReturnValue _wrap_PropertiesCA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 90011,90017 ----
  static SwigV8ReturnValue _wrap_PropertiesCA(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 90986,90992 ****
  static SwigV8ReturnValue _wrap_GetBeta(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    vector arg3 = (vector) 0 ;
--- 90986,90992 ----
  static SwigV8ReturnValue _wrap_GetBeta(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 91139,91145 ****
  static SwigV8ReturnValue _wrap_Get_RisksC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    vector arg3 = (vector) 0 ;
--- 91139,91145 ----
  static SwigV8ReturnValue _wrap_Get_RisksC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 91427,91433 ****
  static SwigV8ReturnValue _wrap_MarginalUtility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 91427,91433 ----
  static SwigV8ReturnValue _wrap_MarginalUtility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 91943,91949 ****
  static SwigV8ReturnValue _wrap_MarginalUtilityb(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 91943,91949 ----
  static SwigV8ReturnValue _wrap_MarginalUtilityb(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 92468,92474 ****
  static SwigV8ReturnValue _wrap_MarginalUtilitybSa(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 92468,92474 ----
  static SwigV8ReturnValue _wrap_MarginalUtilitybSa(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 93020,93026 ****
  static SwigV8ReturnValue _wrap_MarginalUtilitybSaQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 93020,93026 ----
  static SwigV8ReturnValue _wrap_MarginalUtilitybSaQ(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 93626,93632 ****
  static SwigV8ReturnValue _wrap_MarginalUtility_ext(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
--- 93626,93632 ----
  static SwigV8ReturnValue _wrap_MarginalUtility_ext(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    dimen arg1 ;
    long arg2 ;
    char **arg3 = (char **) 0 ;
***************
*** 94045,94051 ****
  static SwigV8ReturnValue _wrap_round_weight(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    double arg1 ;
    double arg2 ;
    double arg3 ;
--- 94045,94051 ----
  static SwigV8ReturnValue _wrap_round_weight(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    double arg1 ;
    double arg2 ;
    double arg3 ;
***************
*** 94147,94153 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94147,94153 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94211,94217 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94211,94217 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94275,94281 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94275,94281 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94355,94361 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94355,94361 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94435,94441 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94435,94441 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94515,94521 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94515,94521 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94579,94585 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94579,94585 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94659,94665 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94659,94665 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94733,94739 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94733,94739 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94797,94803 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94797,94803 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94861,94867 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94861,94867 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94925,94931 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94925,94931 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 94989,94995 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 94989,94995 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95053,95059 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95053,95059 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95117,95123 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95117,95123 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95197,95203 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95197,95203 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95261,95267 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95261,95267 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95367,95373 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95367,95373 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95436,95442 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95436,95442 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95505,95511 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95505,95511 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95574,95580 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95574,95580 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95649,95655 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 95649,95655 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Base_Optimise *arg1 = (Base_Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 95675,95681 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_clocker(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    int arg2 = (int) 0 ;
    void *argp1 = 0 ;
--- 95675,95681 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_clocker(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    int arg2 = (int) 0 ;
    void *argp1 = 0 ;
***************
*** 95712,95718 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_SetLog(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 95712,95718 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_SetLog(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 95739,95745 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_PrintLog(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 95739,95745 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_PrintLog(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 95766,95772 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_AddLog(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
--- 95766,95772 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_AddLog(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    char *arg2 = (char *) 0 ;
    void *argp1 = 0 ;
***************
*** 95803,95809 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_qphess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 95803,95809 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_qphess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 95947,95953 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_utility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 95947,95953 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_utility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 96065,96071 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_ModifyC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 96065,96071 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_ModifyC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 96191,96197 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_qphess_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 96191,96197 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_qphess_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 96335,96341 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_utility_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 96335,96341 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_utility_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 96453,96459 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_Opt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 96453,96459 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_Opt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 96634,96640 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_OptInterior(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 96634,96640 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_OptInterior(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 96815,96821 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_OptAdvanced(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 96815,96821 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_OptAdvanced(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 97023,97029 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_PathMin(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 97023,97029 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_PathMin(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 97177,97183 ****
  static SwigV8ReturnValue _wrap_Base_Optimise_ModifyC_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 97177,97183 ----
  static SwigV8ReturnValue _wrap_Base_Optimise_ModifyC_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Base_Optimise *arg1 = (Base_Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 97357,97363 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 97357,97363 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 97384,97390 ****
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    void *argp1 = 0 ;
--- 97384,97390 ----
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    void *argp1 = 0 ;
***************
*** 97433,97439 ****
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 97433,97439 ----
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 97490,97496 ****
  static SwigV8ReturnValue _wrap_Optimise__wrap_Optimise_OptSetup(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    OverloadErrorHandler errorHandler;
    
    
--- 97490,97496 ----
  static SwigV8ReturnValue _wrap_Optimise__wrap_Optimise_OptSetup(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    OverloadErrorHandler errorHandler;
    
    
***************
*** 97537,97543 ****
  static SwigV8ReturnValue _wrap_Optimise_GOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 97537,97543 ----
  static SwigV8ReturnValue _wrap_Optimise_GOpt(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 97718,97724 ****
  static SwigV8ReturnValue _wrap_Optimise_Drop(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 97718,97724 ----
  static SwigV8ReturnValue _wrap_Optimise_Drop(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 97764,97770 ****
  static SwigV8ReturnValue _wrap_Optimise_DropCheck(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 97764,97770 ----
  static SwigV8ReturnValue _wrap_Optimise_DropCheck(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 97793,97799 ****
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
--- 97793,97799 ----
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    double arg2 ;
    void *argp1 = 0 ;
***************
*** 97829,97835 ****
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    void *argp1 = 0 ;
--- 97829,97835 ----
  {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    void *argp1 = 0 ;
***************
*** 97882,97888 ****
  static SwigV8ReturnValue _wrap_Optimise__wrap_Optimise_ThreshCheck(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    OverloadErrorHandler errorHandler;
    
    
--- 97882,97888 ----
  static SwigV8ReturnValue _wrap_Optimise__wrap_Optimise_ThreshCheck(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    OverloadErrorHandler errorHandler;
    
    
***************
*** 97977,97983 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 97977,97983 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 98041,98047 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 98041,98047 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 98105,98111 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 98105,98111 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 98169,98175 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 98169,98175 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 98233,98239 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 98233,98239 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 98297,98303 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 98297,98303 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 98323,98329 ****
  static SwigV8ReturnValue _wrap_new_Optimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Object> self = args.Holder();
    Optimise *result;
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_Optimise.");
    result = (Optimise *)new Optimise();
--- 98323,98329 ----
  static SwigV8ReturnValue _wrap_new_Optimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Object> self = args.Holder();
    Optimise *result;
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_Optimise.");
    result = (Optimise *)new Optimise();
***************
*** 98379,98385 ****
  static SwigV8ReturnValue _wrap_Optimise_beta(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 98379,98385 ----
  static SwigV8ReturnValue _wrap_Optimise_beta(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 98460,98466 ****
  static SwigV8ReturnValue _wrap_Optimise_risk(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 98460,98466 ----
  static SwigV8ReturnValue _wrap_Optimise_risk(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 98542,98548 ****
  static SwigV8ReturnValue _wrap_Optimise_MC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 98542,98548 ----
  static SwigV8ReturnValue _wrap_Optimise_MC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 98650,98656 ****
  static SwigV8ReturnValue _wrap_Optimise_qphess_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 98650,98656 ----
  static SwigV8ReturnValue _wrap_Optimise_qphess_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 98794,98800 ****
  static SwigV8ReturnValue _wrap_Optimise_qphess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 98794,98800 ----
  static SwigV8ReturnValue _wrap_Optimise_qphess(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 98938,98944 ****
  static SwigV8ReturnValue _wrap_Optimise_TransformH(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    size_t arg2 = (size_t) 0 ;
    unsigned char arg3 = (unsigned char) 0 ;
--- 98938,98944 ----
  static SwigV8ReturnValue _wrap_Optimise_TransformH(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    size_t arg2 = (size_t) 0 ;
    unsigned char arg3 = (unsigned char) 0 ;
***************
*** 98983,98989 ****
  static SwigV8ReturnValue _wrap_Optimise_utility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 98983,98989 ----
  static SwigV8ReturnValue _wrap_Optimise_utility(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 99101,99107 ****
  static SwigV8ReturnValue _wrap_Optimise_ModifyC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
--- 99101,99107 ----
  static SwigV8ReturnValue _wrap_Optimise_ModifyC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    dimen arg2 ;
    vector arg3 = (vector) 0 ;
***************
*** 99227,99233 ****
  static SwigV8ReturnValue _wrap_Optimise_CompSetup(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 99227,99233 ----
  static SwigV8ReturnValue _wrap_Optimise_CompSetup(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 99254,99260 ****
  static SwigV8ReturnValue _wrap_Optimise_H_size(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 99254,99260 ----
  static SwigV8ReturnValue _wrap_Optimise_H_size(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 99282,99288 ****
  static SwigV8ReturnValue _wrap_Optimise_turnover(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 99282,99288 ----
  static SwigV8ReturnValue _wrap_Optimise_turnover(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 99348,99354 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99348,99354 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99428,99434 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99428,99434 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99508,99514 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99508,99514 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99582,99588 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99582,99588 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99656,99662 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99656,99662 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99730,99736 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99730,99736 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99804,99810 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99804,99810 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99868,99874 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99868,99874 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99932,99938 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99932,99938 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 99996,100002 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 99996,100002 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100060,100066 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100060,100066 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100124,100130 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100124,100130 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100204,100210 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100204,100210 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100268,100274 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100268,100274 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100332,100338 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100332,100338 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100396,100402 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100396,100402 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100460,100466 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100460,100466 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100524,100530 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100524,100530 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100588,100594 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100588,100594 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100652,100658 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100652,100658 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100716,100722 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100716,100722 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100780,100786 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100780,100786 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100844,100850 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100844,100850 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100908,100914 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 100908,100914 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      Optimise *arg1 = (Optimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 100934,100940 ****
  static SwigV8ReturnValue _wrap_Optimise_Rounding(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
--- 100934,100940 ----
  static SwigV8ReturnValue _wrap_Optimise_Rounding(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    Optimise *arg1 = (Optimise *) 0 ;
    size_t arg2 ;
    size_t arg3 ;
***************
*** 101125,101131 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 101125,101131 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 101205,101211 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 101205,101211 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 101285,101291 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 101285,101291 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 101365,101371 ****
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Handle<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
--- 101365,101371 ----
  #endif
      SWIGV8_HANDLESCOPE();
      
!     v8::Local<v8::Value> jsresult;
      FOptimise *arg1 = (FOptimise *) 0 ;
      void *argp1 = 0 ;
      int res1 = 0 ;
***************
*** 101391,101397 ****
  static SwigV8ReturnValue _wrap_FOptimise_facmul(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    dimen arg2 ;
    double *arg3 = (double *) 0 ;
--- 101391,101397 ----
  static SwigV8ReturnValue _wrap_FOptimise_facmul(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    dimen arg2 ;
    double *arg3 = (double *) 0 ;
***************
*** 101508,101514 ****
  static SwigV8ReturnValue _wrap_FOptimise_factor_model_process(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 101508,101514 ----
  static SwigV8ReturnValue _wrap_FOptimise_factor_model_process(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 101535,101541 ****
  static SwigV8ReturnValue _wrap_FOptimise_FMC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
--- 101535,101541 ----
  static SwigV8ReturnValue _wrap_FOptimise_FMC(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    vector arg2 = (vector) 0 ;
    vector arg3 = (vector) 0 ;
***************
*** 101670,101676 ****
  static SwigV8ReturnValue _wrap_FOptimise_H_size(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 101670,101676 ----
  static SwigV8ReturnValue _wrap_FOptimise_H_size(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 101698,101704 ****
  static SwigV8ReturnValue _wrap_FOptimise_CompSetup(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
--- 101698,101704 ----
  static SwigV8ReturnValue _wrap_FOptimise_CompSetup(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    void *argp1 = 0 ;
    int res1 = 0 ;
***************
*** 101725,101731 ****
  static SwigV8ReturnValue _wrap_new_FOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Object> self = args.Holder();
    FOptimise *result;
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_FOptimise.");
    result = (FOptimise *)new FOptimise();
--- 101725,101731 ----
  static SwigV8ReturnValue _wrap_new_FOptimise(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Object> self = args.Holder();
    FOptimise *result;
    if(args.Length() != 0) SWIG_exception_fail(SWIG_ERROR, "Illegal number of arguments for _wrap_new_FOptimise.");
    result = (FOptimise *)new FOptimise();
***************
*** 101781,101787 ****
  static SwigV8ReturnValue _wrap_FOptimise_qphess_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
--- 101781,101787 ----
  static SwigV8ReturnValue _wrap_FOptimise_qphess_base(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    dimen arg2 ;
    dimen arg3 ;
***************
*** 101925,101931 ****
  static SwigV8ReturnValue _wrap_FOptimise_TransformH(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    size_t arg2 = (size_t) 0 ;
    unsigned char arg3 = (unsigned char) 0 ;
--- 101925,101931 ----
  static SwigV8ReturnValue _wrap_FOptimise_TransformH(const SwigV8Arguments &args) {
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Value> jsresult;
    FOptimise *arg1 = (FOptimise *) 0 ;
    size_t arg2 = (size_t) 0 ;
    unsigned char arg3 = (unsigned char) 0 ;
***************
*** 102346,102361 ****
  // TODO: is it ok to do that?
  extern "C"
  #if (NODE_MODULE_VERSION < 0x000C)
! void SWIGV8_INIT (v8::Handle<v8::Object> exports)
  #else
! void SWIGV8_INIT (v8::Handle<v8::Object> exports, v8::Handle<v8::Object> /*module*/)
  #endif
  {
    SWIG_InitializeModule(static_cast<void *>(&exports));
  
    SWIGV8_HANDLESCOPE();
    
!   v8::Handle<v8::Object> exports_obj = exports;
  
  
    // a class template for creating proxies of undefined types
--- 102346,102361 ----
  // TODO: is it ok to do that?
  extern "C"
  #if (NODE_MODULE_VERSION < 0x000C)
! void SWIGV8_INIT (v8::Local<v8::Object> exports)
  #else
! void SWIGV8_INIT (v8::Local<v8::Object> exports, v8::Local<v8::Object> /*module*/)
  #endif
  {
    SWIG_InitializeModule(static_cast<void *>(&exports));
  
    SWIGV8_HANDLESCOPE();
    
!   v8::Local<v8::Object> exports_obj = exports;
  
  
    // a class template for creating proxies of undefined types
***************
*** 102366,102386 ****
  
    /* create class templates */
    /* Name: _exports_Base_Optimise, Type: p_Base_Optimise, Dtor: _wrap_delete_Base_Optimise */
! v8::Handle<v8::FunctionTemplate> _exports_Base_Optimise_class = SWIGV8_CreateClassTemplate("_exports_Base_Optimise");
  SWIGV8_SET_CLASS_TEMPL(_exports_Base_Optimise_clientData.class_templ, _exports_Base_Optimise_class);
  _exports_Base_Optimise_clientData.dtor = _wrap_delete_Base_Optimise;
  if (SWIGTYPE_p_Base_Optimise->clientdata == 0) {
    SWIGTYPE_p_Base_Optimise->clientdata = &_exports_Base_Optimise_clientData;
  }
  /* Name: _exports_Optimise, Type: p_Optimise, Dtor: _wrap_delete_Optimise */
! v8::Handle<v8::FunctionTemplate> _exports_Optimise_class = SWIGV8_CreateClassTemplate("_exports_Optimise");
  SWIGV8_SET_CLASS_TEMPL(_exports_Optimise_clientData.class_templ, _exports_Optimise_class);
  _exports_Optimise_clientData.dtor = _wrap_delete_Optimise;
  if (SWIGTYPE_p_Optimise->clientdata == 0) {
    SWIGTYPE_p_Optimise->clientdata = &_exports_Optimise_clientData;
  }
  /* Name: _exports_FOptimise, Type: p_FOptimise, Dtor: _wrap_delete_FOptimise */
! v8::Handle<v8::FunctionTemplate> _exports_FOptimise_class = SWIGV8_CreateClassTemplate("_exports_FOptimise");
  SWIGV8_SET_CLASS_TEMPL(_exports_FOptimise_clientData.class_templ, _exports_FOptimise_class);
  _exports_FOptimise_clientData.dtor = _wrap_delete_FOptimise;
  if (SWIGTYPE_p_FOptimise->clientdata == 0) {
--- 102366,102386 ----
  
    /* create class templates */
    /* Name: _exports_Base_Optimise, Type: p_Base_Optimise, Dtor: _wrap_delete_Base_Optimise */
! v8::Local<v8::FunctionTemplate> _exports_Base_Optimise_class = SWIGV8_CreateClassTemplate("_exports_Base_Optimise");
  SWIGV8_SET_CLASS_TEMPL(_exports_Base_Optimise_clientData.class_templ, _exports_Base_Optimise_class);
  _exports_Base_Optimise_clientData.dtor = _wrap_delete_Base_Optimise;
  if (SWIGTYPE_p_Base_Optimise->clientdata == 0) {
    SWIGTYPE_p_Base_Optimise->clientdata = &_exports_Base_Optimise_clientData;
  }
  /* Name: _exports_Optimise, Type: p_Optimise, Dtor: _wrap_delete_Optimise */
! v8::Local<v8::FunctionTemplate> _exports_Optimise_class = SWIGV8_CreateClassTemplate("_exports_Optimise");
  SWIGV8_SET_CLASS_TEMPL(_exports_Optimise_clientData.class_templ, _exports_Optimise_class);
  _exports_Optimise_clientData.dtor = _wrap_delete_Optimise;
  if (SWIGTYPE_p_Optimise->clientdata == 0) {
    SWIGTYPE_p_Optimise->clientdata = &_exports_Optimise_clientData;
  }
  /* Name: _exports_FOptimise, Type: p_FOptimise, Dtor: _wrap_delete_FOptimise */
! v8::Local<v8::FunctionTemplate> _exports_FOptimise_class = SWIGV8_CreateClassTemplate("_exports_FOptimise");
  SWIGV8_SET_CLASS_TEMPL(_exports_FOptimise_clientData.class_templ, _exports_FOptimise_class);
  _exports_FOptimise_clientData.dtor = _wrap_delete_FOptimise;
  if (SWIGTYPE_p_FOptimise->clientdata == 0) {
***************
*** 102531,102553 ****
  
    /* class instances */
    /* Class: Base_Optimise (_exports_Base_Optimise) */
! v8::Handle<v8::FunctionTemplate> _exports_Base_Optimise_class_0 = SWIGV8_CreateClassTemplate("Base_Optimise");
  _exports_Base_Optimise_class_0->SetCallHandler(_wrap_new_veto_Base_Optimise);
  _exports_Base_Optimise_class_0->Inherit(_exports_Base_Optimise_class);
  _exports_Base_Optimise_class_0->SetHiddenPrototype(true);
! v8::Handle<v8::Object> _exports_Base_Optimise_obj = _exports_Base_Optimise_class_0->GetFunction();
  /* Class: Optimise (_exports_Optimise) */
! v8::Handle<v8::FunctionTemplate> _exports_Optimise_class_0 = SWIGV8_CreateClassTemplate("Optimise");
  _exports_Optimise_class_0->SetCallHandler(_wrap_new_Optimise);
  _exports_Optimise_class_0->Inherit(_exports_Optimise_class);
  _exports_Optimise_class_0->SetHiddenPrototype(true);
! v8::Handle<v8::Object> _exports_Optimise_obj = _exports_Optimise_class_0->GetFunction();
  /* Class: FOptimise (_exports_FOptimise) */
! v8::Handle<v8::FunctionTemplate> _exports_FOptimise_class_0 = SWIGV8_CreateClassTemplate("FOptimise");
  _exports_FOptimise_class_0->SetCallHandler(_wrap_new_FOptimise);
  _exports_FOptimise_class_0->Inherit(_exports_FOptimise_class);
  _exports_FOptimise_class_0->SetHiddenPrototype(true);
! v8::Handle<v8::Object> _exports_FOptimise_obj = _exports_FOptimise_class_0->GetFunction();
  
  
    /* add static class functions and variables */
--- 102531,102553 ----
  
    /* class instances */
    /* Class: Base_Optimise (_exports_Base_Optimise) */
! v8::Local<v8::FunctionTemplate> _exports_Base_Optimise_class_0 = SWIGV8_CreateClassTemplate("Base_Optimise");
  _exports_Base_Optimise_class_0->SetCallHandler(_wrap_new_veto_Base_Optimise);
  _exports_Base_Optimise_class_0->Inherit(_exports_Base_Optimise_class);
  _exports_Base_Optimise_class_0->SetHiddenPrototype(true);
! v8::Local<v8::Object> _exports_Base_Optimise_obj = _exports_Base_Optimise_class_0->GetFunction(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked();
  /* Class: Optimise (_exports_Optimise) */
! v8::Local<v8::FunctionTemplate> _exports_Optimise_class_0 = SWIGV8_CreateClassTemplate("Optimise");
  _exports_Optimise_class_0->SetCallHandler(_wrap_new_Optimise);
  _exports_Optimise_class_0->Inherit(_exports_Optimise_class);
  _exports_Optimise_class_0->SetHiddenPrototype(true);
! v8::Local<v8::Object> _exports_Optimise_obj = _exports_Optimise_class_0->GetFunction(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked();
  /* Class: FOptimise (_exports_FOptimise) */
! v8::Local<v8::FunctionTemplate> _exports_FOptimise_class_0 = SWIGV8_CreateClassTemplate("FOptimise");
  _exports_FOptimise_class_0->SetCallHandler(_wrap_new_FOptimise);
  _exports_FOptimise_class_0->Inherit(_exports_FOptimise_class);
  _exports_FOptimise_class_0->SetHiddenPrototype(true);
! v8::Local<v8::Object> _exports_FOptimise_obj = _exports_FOptimise_class_0->GetFunction(SWIGV8_CURRENT_CONTEXT()).ToLocalChecked();
  
  
    /* add static class functions and variables */
